var searchIndex = JSON.parse('{\
"extendr_api":{"doc":"A safe and user friendly R extension interface.","i":[[23,"extendr","extendr_api","Generate bindings for a single function.",null,null],[14,"extendr_module","","Define a module and export symbols to R Example:",null,null],[0,"error","","Error handling in Rust called from R.",null,null],[4,"Error","extendr_api::error","",null,null],[13,"Panic","","",0,null],[13,"NotFound","","",0,null],[13,"NotAVectorType","","",0,null],[13,"EvalError","","",0,null],[12,"code","extendr_api::error::Error","",1,null],[12,"error","","",1,null],[13,"ParseError","extendr_api::error","",0,null],[12,"code","extendr_api::error::Error","",2,null],[12,"status","","",2,null],[13,"NamesLengthMismatch","extendr_api::error","",0,null],[13,"ExpectedNull","","",0,null],[13,"ExpectedSymbol","","",0,null],[13,"ExpectedPairlist","","",0,null],[13,"ExpectedFunction","","",0,null],[13,"ExpectedEnviroment","","",0,null],[13,"ExpectedPromise","","",0,null],[13,"ExpectedLanguage","","",0,null],[13,"ExpectedSpecial","","",0,null],[13,"ExpectedBuiltin","","",0,null],[13,"ExpectedCharacter","","",0,null],[13,"ExpectedLogical","","",0,null],[13,"ExpectedInteger","","",0,null],[13,"ExpectedReal","","",0,null],[13,"ExpectedComplex","","",0,null],[13,"ExpectedString","","",0,null],[13,"ExpectedDot","","",0,null],[13,"ExpectedAny","","",0,null],[13,"ExpectedList","","",0,null],[13,"ExpectedExpression","","",0,null],[13,"ExpectedBytecode","","",0,null],[13,"ExpectedExternalPtr","","",0,null],[13,"ExpectedWeakRef","","",0,null],[13,"ExpectedRaw","","",0,null],[13,"ExpectedS4","","",0,null],[13,"Other","","",0,null],[6,"Result","","",null,null],[0,"functions","extendr_api","",null,null],[5,"new_env","extendr_api::functions","Create a new, empty environment parented on global_env()",null,[[],["robj",4]]],[5,"new_env_with_capacity","","Create a new, empty environment parented on global_env() …",null,[[],["robj",4]]],[5,"global_var","","Get a global variable from global_env() and ancestors. If …",null,[[["into",8],["robj",4]],[["result",6],["robj",4]]]],[5,"local_var","","Get a local variable from current_env() and ancestors.",null,[[["into",8],["robj",4]],[["result",6],["robj",4]]]],[5,"global_function","","Get a global function from global_env() and ancestors.",null,[[["into",8],["robj",4]],[["robj",4],["option",4]]]],[5,"find_namespace","","Find a namespace by name.",null,[[["into",8],["robj",4]],[["robj",4],["option",4]]]],[5,"current_env","","The current interpreter environment.",null,[[],["robj",4]]],[5,"global_env","","The \\\"global\\\" environment",null,[[],["robj",4]]],[5,"empty_env","","An empty environment at the root of the environment tree",null,[[],["robj",4]]],[5,"base_env","","The base environment; formerly R_NilValue",null,[[],["robj",4]]],[5,"base_namespace","","The namespace for base.",null,[[],["robj",4]]],[5,"namespace_registry","","For registered namespaces.",null,[[],["robj",4]]],[5,"srcref","","Current srcref, for debuggers",null,[[],["robj",4]]],[5,"nil_value","","The nil object",null,[[],["robj",4]]],[5,"unbound_value","","Unbound marker",null,[[],["robj",4]]],[5,"missing_arg","","Missing argument marker",null,[[],["robj",4]]],[5,"base_symbol","","\\\"base\\\"",null,[[],["robj",4]]],[5,"brace_symbol","","\\\"{\\\"",null,[[],["robj",4]]],[5,"bracket_2_symbol","","\\\"[[\\\"",null,[[],["robj",4]]],[5,"bracket_symbol","","\\\"[\\\"",null,[[],["robj",4]]],[5,"class_symbol","","\\\"class\\\"",null,[[],["robj",4]]],[5,"device_symbol","","\\\".Device\\\"",null,[[],["robj",4]]],[5,"dimnames_symbol","","\\\"dimnames\\\"",null,[[],["robj",4]]],[5,"dim_symbol","","\\\"dim\\\"",null,[[],["robj",4]]],[5,"dollar_symbol","","\\\"$\\\"",null,[[],["robj",4]]],[5,"dots_symbol","","\\\"...\\\"",null,[[],["robj",4]]],[5,"double_colon_symbol","","\\\"::\\\"",null,[[],["robj",4]]],[5,"lastvalue_symbol","","\\\".Last.value\\\"",null,[[],["robj",4]]],[5,"levels_symbol","","\\\"levels\\\"",null,[[],["robj",4]]],[5,"mode_symbol","","\\\"mode\\\"",null,[[],["robj",4]]],[5,"na_rm_symbol","","\\\"na.rm\\\"",null,[[],["robj",4]]],[5,"name_symbol","","\\\"name\\\"",null,[[],["robj",4]]],[5,"names_symbol","","\\\"names\\\"",null,[[],["robj",4]]],[5,"namespace_env_symbol","","<em>NAMESPACE</em>_.\\\"",null,[[],["robj",4]]],[5,"package_symbol","","\\\"package\\\"",null,[[],["robj",4]]],[5,"previous_symbol","","\\\"previous\\\"",null,[[],["robj",4]]],[5,"quote_symbol","","\\\"quote\\\"",null,[[],["robj",4]]],[5,"row_names_symbol","","\\\"row.names\\\"",null,[[],["robj",4]]],[5,"seeds_symbol","","\\\".Random.seed\\\"",null,[[],["robj",4]]],[5,"sort_list_symbol","","\\\"sort.list\\\"",null,[[],["robj",4]]],[5,"source_symbol","","\\\"source\\\"",null,[[],["robj",4]]],[5,"spec_symbol","","\\\"spec\\\"",null,[[],["robj",4]]],[5,"tsp_symbol","","\\\"tsp\\\"",null,[[],["robj",4]]],[5,"triple_colon_symbol","","\\\":::\\\"",null,[[],["robj",4]]],[5,"dot_defined","","\\\".defined\\\"",null,[[],["robj",4]]],[5,"dot_method","","\\\".Method\\\"",null,[[],["robj",4]]],[5,"dot_package_name","","\\\"packageName\\\"",null,[[],["robj",4]]],[5,"dot_target","","\\\".target\\\"",null,[[],["robj",4]]],[5,"na_string","","NA_STRING as a CHARSXP",null,[[],["robj",4]]],[5,"blank_string","","\\\"\\\" as a CHARSXP",null,[[],["robj",4]]],[5,"blank_scalar_string","","\\\"\\\" as a STRSXP",null,[[],["robj",4]]],[5,"na_str","","Special \\\"NA\\\" string that represents null strings.",null,[[]]],[5,"parse","","Parse a string into an R executable object",null,[[],[["result",6],["robj",4]]]],[5,"eval_string","","Parse a string into an R executable object and run it.",null,[[],[["result",6],["robj",4]]]],[0,"iter","extendr_api","",null,null],[3,"ListIter","extendr_api::iter","Iterator over the objects in a VECSXP, EXPRSXP or …",null,null],[11,"new","","",3,[[]]],[3,"SliceIter","","Generalised iterator of numbers and logical. See Int, …",null,null],[11,"new","","",4,[[]]],[11,"from_slice","","",4,[[["robj",4]]]],[6,"NamedListIter","","Iterator over name-value pairs in lists.",null,null],[6,"Int","","Iterator over primitives in integer objects.",null,null],[6,"Real","","Iterator over primitives in real objects.",null,null],[6,"Logical","","Iterator over primitives in logical objects.",null,null],[3,"PairlistIter","","",null,null],[11,"new","","Make an empty list iterator.",5,[[]]],[3,"PairlistTagIter","","Iterator over pairlist tag names.",null,null],[11,"new","","Make an empty list iterator.",6,[[]]],[3,"StrIter","","Iterator over strings or string factors.",null,null],[11,"new","","Make an empty str iterator.",7,[[]]],[3,"EnvIter","","Iterator over the names and values of an environment",null,null],[0,"lang_macros","extendr_api","Argument parsing and checking.",null,null],[0,"logical","","",null,null],[3,"Bool","extendr_api::logical","Bool is a wrapper for i32 in the context of an R\'s …",null,null],[12,"0","","",8,null],[11,"to_bool","","Convert this Bool to a bool. Note NA will be true.",8,[[]]],[11,"from_bool","","Convert this construct a Bool from a rust boolean.",8,[[]]],[11,"is_true","","Test if TRUE",8,[[]]],[11,"is_false","","Test if FALSE",8,[[]]],[0,"matrix","extendr_api","Wrappers for matrices with deferred arithmetic.",null,null],[3,"RArray","extendr_api::matrix","Wrapper for creating and using matrices and arrays.",null,null],[6,"RColumn","","",null,null],[6,"RMatrix","","",null,null],[6,"RMatrix3D","","",null,null],[11,"data","","Get the underlying data fro this array.",9,[[]]],[11,"dim","","Get the dimensions for this array.",9,[[]]],[11,"new","","Make a new vector type.",9,[[]]],[11,"nrows","","Get the number of rows.",9,[[]]],[11,"new","","Make a new vector type.",10,[[]]],[11,"nrows","","Get the number of rows.",10,[[]]],[11,"new","","Create a new matrix wrapper.",9,[[]]],[11,"nrows","","Get the number of rows.",9,[[]]],[11,"ncols","","Get the number of columns.",9,[[]]],[11,"new","","Create a new matrix wrapper.",11,[[]]],[11,"nrows","","Get the number of rows.",11,[[]]],[11,"ncols","","Get the number of columns.",11,[[]]],[11,"new","","Create a new matrix wrapper.",9,[[]]],[11,"nrows","","Get the number of rows.",9,[[]]],[11,"ncols","","Get the number of columns.",9,[[]]],[11,"nsub","","Get the number of submatrices.",9,[[]]],[11,"new","","Create a new matrix wrapper.",12,[[]]],[11,"nrows","","Get the number of rows.",12,[[]]],[11,"ncols","","Get the number of columns.",12,[[]]],[11,"nsub","","Get the number of submatrices.",12,[[]]],[0,"metadata","extendr_api","Module metadata",null,null],[3,"Arg","extendr_api::metadata","Metadata function argument.",null,null],[12,"name","","",13,null],[12,"arg_type","","",13,null],[3,"Func","","Metadata function.",null,null],[12,"doc","","",14,null],[12,"name","","",14,null],[12,"args","","",14,null],[12,"return_type","","",14,null],[12,"func_ptr","","",14,null],[12,"hidden","","",14,null],[3,"Impl","","Metadata Impl.",null,null],[12,"doc","","",15,null],[12,"name","","",15,null],[12,"methods","","",15,null],[3,"Metadata","","Module metadata.",null,null],[12,"name","","",16,null],[12,"functions","","",16,null],[12,"impls","","",16,null],[11,"make_r_wrappers","","",16,[[],[["result",6],["string",3]]]],[0,"ownership","extendr_api","Maintain ownership of R objects.",null,null],[5,"protect","extendr_api::ownership","",null,[[["sexp",6]]]],[5,"unprotect","","",null,[[["sexp",6]]]],[17,"INITIAL_PRESERVATION_SIZE","","",null,null],[17,"EXTRA_PRESERVATION_SIZE","","",null,null],[0,"prelude","extendr_api","Common exports for extendr-api.This allows us to be more …",null,null],[0,"prelude","extendr_api::prelude","ndarray prelude.",null,null],[6,"ArcArray","extendr_api::prelude::prelude","An array where the data has shared ownership and is copy …",null,null],[6,"Array","","An array that owns its data uniquely.",null,null],[3,"ArrayBase","","An <em>n</em>-dimensional array.",null,null],[6,"ArrayView","","A read-only array view.",null,null],[6,"ArrayViewMut","","A read-write array view.",null,null],[6,"CowArray","","An array with copy-on-write behavior.",null,null],[6,"RawArrayView","","A read-only array view without a lifetime.",null,null],[6,"RawArrayViewMut","","A mutable array view without a lifetime.",null,null],[6,"RcArray","","An array where the data has shared ownership and is copy …",null,null],[3,"Axis","","An axis index.",null,null],[12,"0","","",17,null],[3,"Dim","","Dimension description.",null,null],[5,"Dim","","Create a new dimension value.",null,[[]]],[8,"Dimension","","Array shape and index trait.",null,null],[18,"NDIM","","For fixed-size dimension representations (e.g. <code>Ix2</code>), this …",18,null],[16,"SliceArg","","<code>SliceArg</code> is the type which is used to specify slicing for …",18,null],[16,"Pattern","","Pattern matching friendly form of the dimension value.",18,null],[16,"Smaller","","Next smaller dimension (if applicable)",18,null],[16,"Larger","","Next larger dimension",18,null],[10,"ndim","","Returns the number of dimensions (number of axes).",18,[[]]],[10,"into_pattern","","Convert the dimension into a pattern matching friendly …",18,[[]]],[11,"size","","Compute the size of the dimension (number of elements)",18,[[]]],[11,"size_checked","","Compute the size while checking for overflow.",18,[[],["option",4]]],[11,"as_array_view","","Borrow as a read-only array view.",18,[[],[["viewrepr",3],["dim",3],["arraybase",3]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",18,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[10,"zeros","","Creates a dimension of all zeros with the specified ndim.",18,[[]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional …",18,[[],[["dim",3],["ixdynimpl",3]]]],[10,"__private__","","This trait is private to implement; this method exists to …",18,[[],["privatemarker",3]]],[6,"Array0","","zero-dimensional array",null,null],[6,"Array1","","one-dimensional array",null,null],[6,"Array2","","two-dimensional array",null,null],[6,"Array3","","three-dimensional array",null,null],[6,"Array4","","four-dimensional array",null,null],[6,"Array5","","five-dimensional array",null,null],[6,"Array6","","six-dimensional array",null,null],[6,"ArrayD","","dynamic-dimensional array",null,null],[6,"ArrayView0","","zero-dimensional array view",null,null],[6,"ArrayView1","","one-dimensional array view",null,null],[6,"ArrayView2","","two-dimensional array view",null,null],[6,"ArrayView3","","three-dimensional array view",null,null],[6,"ArrayView4","","four-dimensional array view",null,null],[6,"ArrayView5","","five-dimensional array view",null,null],[6,"ArrayView6","","six-dimensional array view",null,null],[6,"ArrayViewD","","dynamic-dimensional array view",null,null],[6,"ArrayViewMut0","","zero-dimensional read-write array view",null,null],[6,"ArrayViewMut1","","one-dimensional read-write array view",null,null],[6,"ArrayViewMut2","","two-dimensional read-write array view",null,null],[6,"ArrayViewMut3","","three-dimensional read-write array view",null,null],[6,"ArrayViewMut4","","four-dimensional read-write array view",null,null],[6,"ArrayViewMut5","","five-dimensional read-write array view",null,null],[6,"ArrayViewMut6","","six-dimensional read-write array view",null,null],[6,"ArrayViewMutD","","dynamic-dimensional read-write array view",null,null],[6,"Ix0","","zero-dimensionial",null,null],[5,"Ix0","","Create a zero-dimensional index",null,[[],["dim",3]]],[6,"Ix1","","one-dimensional",null,null],[5,"Ix1","","Create a one-dimensional index",null,[[],["dim",3]]],[6,"Ix2","","two-dimensional",null,null],[5,"Ix2","","Create a two-dimensional index",null,[[],["dim",3]]],[6,"Ix3","","three-dimensional",null,null],[5,"Ix3","","Create a three-dimensional index",null,[[],["dim",3]]],[6,"Ix4","","four-dimensional",null,null],[5,"Ix4","","Create a four-dimensional index",null,[[],["dim",3]]],[6,"Ix5","","five-dimensional",null,null],[5,"Ix5","","Create a five-dimensional index",null,[[],["dim",3]]],[6,"Ix6","","six-dimensional",null,null],[5,"Ix6","","Create a six-dimensional index",null,[[],["dim",3]]],[6,"IxDyn","","dynamic-dimensional",null,null],[5,"IxDyn","","Create a dynamic-dimensional index",null,[[],[["dim",3],["ixdynimpl",3]]]],[5,"arr0","","Create a zero-dimensional array with the element <code>x</code>.",null,[[],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[5,"arr1","","Create a one-dimensional array with elements from <code>xs</code>.",null,[[],[["dim",3],["arraybase",3],["ownedrepr",3]]]],[5,"arr2","","Create a two-dimensional array with elements from <code>xs</code>.",null,[[],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[5,"aview0","","Create a zero-dimensional array view borrowing <code>x</code>.",null,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[5,"aview1","","Create a one-dimensional array view with elements …",null,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[5,"aview2","","Create a two-dimensional array view with elements …",null,[[],[["dim",3],["arraybase",3],["viewrepr",3]]]],[5,"aview_mut1","","Create a one-dimensional read-write array view with …",null,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[14,"array","","Create an <strong><code>Array</code></strong> with one, two or three dimensions.",null,null],[14,"azip","","Array zip macro: lock step function application across …",null,null],[14,"s","","Slice argument constructor.",null,null],[8,"ShapeBuilder","","A trait for <code>Shape</code> and <code>D where D: Dimension</code> that allows …",null,null],[16,"Dim","","",19,null],[16,"Strides","","",19,null],[10,"into_shape","","",19,[[],["shape",3]]],[10,"f","","",19,[[],["shape",3]]],[10,"set_f","","",19,[[],["shape",3]]],[10,"strides","","",19,[[],["strideshape",3]]],[8,"AsArray","","Argument conversion into an array view",null,null],[8,"NdFloat","","Floating-point element types <code>f32</code> and <code>f64</code>.",null,null],[6,"Ix","extendr_api::prelude","Array index type",null,null],[6,"Ixs","","Array index type (signed)",null,null],[3,"ArrayBase","","An <em>n</em>-dimensional array.",null,null],[6,"RcArray","","An array where the data has shared ownership and is copy …",null,null],[6,"ArcArray","","An array where the data has shared ownership and is copy …",null,null],[6,"Array","","An array that owns its data uniquely.",null,null],[6,"CowArray","","An array with copy-on-write behavior.",null,null],[6,"ArrayView","","A read-only array view.",null,null],[6,"ArrayViewMut","","A read-write array view.",null,null],[6,"RawArrayView","","A read-only array view without a lifetime.",null,null],[6,"RawArrayViewMut","","A mutable array view without a lifetime.",null,null],[3,"OwnedArcRepr","","ArcArray\'s representation.",null,null],[3,"RawViewRepr","","Array pointer’s representation.",null,null],[3,"ViewRepr","","Array view’s representation.",null,null],[4,"CowRepr","","CowArray\'s representation.",null,null],[13,"View","","Borrowed data.",20,null],[13,"Owned","","Owned data.",20,null],[0,"linalg","","Linear algebra.",null,null],[5,"general_mat_mul","extendr_api::prelude::linalg","General matrix-matrix multiplication.",null,[[["arraybase",3],["arraybase",3],["arraybase",3]]]],[5,"general_mat_vec_mul","","General matrix-vector multiplication.",null,[[["arraybase",3],["arraybase",3],["arraybase",3]]]],[8,"Dot","","Matrix Multiplication",null,null],[16,"Output","","The result of the operation.",21,null],[10,"dot","","",21,[[]]],[3,"Shape","extendr_api::prelude","A contiguous array shape of n dimensions.",null,null],[3,"StrideShape","","An array shape of n dimensions in c-order, f-order or …",null,null],[3,"Axis","","An axis index.",null,null],[12,"0","","",17,null],[3,"AxisDescription","","Description of the axis, its length and its stride.",null,null],[12,"0","","",22,null],[12,"1","","",22,null],[12,"2","","",22,null],[8,"Dimension","","Array shape and index trait.",null,null],[18,"NDIM","","For fixed-size dimension representations (e.g. <code>Ix2</code>), this …",18,null],[16,"SliceArg","","<code>SliceArg</code> is the type which is used to specify slicing for …",18,null],[16,"Pattern","","Pattern matching friendly form of the dimension value.",18,null],[16,"Smaller","","Next smaller dimension (if applicable)",18,null],[16,"Larger","","Next larger dimension",18,null],[10,"ndim","","Returns the number of dimensions (number of axes).",18,[[]]],[10,"into_pattern","","Convert the dimension into a pattern matching friendly …",18,[[]]],[11,"size","","Compute the size of the dimension (number of elements)",18,[[]]],[11,"size_checked","","Compute the size while checking for overflow.",18,[[],["option",4]]],[11,"as_array_view","","Borrow as a read-only array view.",18,[[],[["viewrepr",3],["dim",3],["arraybase",3]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",18,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[10,"zeros","","Creates a dimension of all zeros with the specified ndim.",18,[[]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional …",18,[[],[["dim",3],["ixdynimpl",3]]]],[10,"__private__","","This trait is private to implement; this method exists to …",18,[[],["privatemarker",3]]],[8,"IntoDimension","","Argument conversion a dimension.",null,null],[16,"Dim","","",23,null],[10,"into_dimension","","",23,[[]]],[8,"RemoveAxis","","Array shape with a next smaller dimension.",null,null],[10,"remove_axis","","",24,[[["axis",3]]]],[3,"IxDynImpl","","Dynamic dimension or index type.",null,null],[8,"NdIndex","","Tuple or fixed size arrays that can be used to index an …",null,null],[4,"ErrorKind","","Error code for an error related to array shape or layout.",null,null],[13,"IncompatibleShape","","incompatible shape",25,null],[13,"IncompatibleLayout","","incompatible memory layout",25,null],[13,"RangeLimited","","the shape does not fit inside type limits",25,null],[13,"OutOfBounds","","out of bounds indexing",25,null],[13,"Unsupported","","aliasing array elements",25,null],[13,"Overflow","","overflow when computing offset, length, etc.",25,null],[3,"ShapeError","","An error related to array shape or layout.",null,null],[5,"indices","","Create an iterable of the array shape <code>shape</code>.",null,[[],["indices",3]]],[5,"indices_of","","Return an iterable of the indices of the passed-in array.",null,[[["arraybase",3]],["indices",3]]],[3,"Slice","","A slice (range with step size).",null,null],[12,"start","","",26,null],[12,"end","","",26,null],[12,"step","","",26,null],[3,"SliceInfo","","Represents all of the necessary information to perform a …",null,null],[4,"SliceOrIndex","","A slice (range with step) or an index.",null,null],[13,"Slice","","A range with step size. <code>end</code> is an exclusive index. …",27,null],[12,"start","extendr_api::prelude::SliceOrIndex","",28,null],[12,"end","","",28,null],[12,"step","","",28,null],[13,"Index","extendr_api::prelude","A single index.",27,null],[8,"AsArray","","Argument conversion into an array view",null,null],[8,"LinalgScalar","","Elements that support linear algebra operations.",null,null],[8,"NdFloat","","Floating-point element types <code>f32</code> and <code>f64</code>.",null,null],[5,"stack","","Stack arrays along the given axis.",null,[[["axis",3]],[["result",4],["arraybase",3],["shapeerror",3]]]],[14,"stack","","Stack arrays along the given axis.",null,null],[8,"IndexLonger","","Extra indexing methods for array views",null,null],[16,"Output","","The type of the reference to the element that is …",29,null],[10,"index","","Get a reference of a element through the view.",29,[[]]],[10,"get","","Get a reference of a element through the view.",29,[[],["option",4]]],[10,"uget","","Get a reference of a element through the view without …",29,[[]]],[8,"ShapeBuilder","","A trait for <code>Shape</code> and <code>D where D: Dimension</code> that allows …",null,null],[16,"Dim","","",19,null],[16,"Strides","","",19,null],[10,"into_shape","","",19,[[],["shape",3]]],[10,"f","","",19,[[],["shape",3]]],[10,"set_f","","",19,[[],["shape",3]]],[10,"strides","","",19,[[],["strideshape",3]]],[8,"AssignElem","","A producer element that can be assigned to once",null,null],[10,"assign_elem","","Assign the value <code>input</code> to the element that self …",30,[[]]],[8,"Data","","Array representation trait.",null,null],[8,"DataClone","","Array representation trait.",null,null],[8,"DataMut","","Array representation trait.",null,null],[8,"DataOwned","","Array representation trait.",null,null],[8,"DataShared","","Array representation trait.",null,null],[8,"RawData","","Array representation trait.",null,null],[16,"Elem","","The array element type.",31,null],[10,"__private__","","This trait is private to implement; this method exists to …",31,[[],["privatemarker",3]]],[8,"RawDataClone","","Array representation trait.",null,null],[8,"RawDataMut","","Array representation trait.",null,null],[8,"RawDataSubst","","Array representation trait.",null,null],[16,"Output","","The resulting array storage of the same kind but …",32,null],[14,"array","","Create an <strong><code>Array</code></strong> with one, two or three dimensions.",null,null],[0,"iter","","Producers, iterables and iterators.",null,null],[3,"Axes","extendr_api::prelude::iter","An iterator over the length and stride of each axis of an …",null,null],[3,"Indices","","Indices producer and iterable.",null,null],[3,"IndicesIter","","An iterator over the indexes of an array shape.",null,null],[3,"AxisChunksIter","","An iterator that traverses over the specified axis and …",null,null],[3,"AxisChunksIterMut","","An iterator that traverses over the specified axis and …",null,null],[3,"AxisIter","","An iterator that traverses over an axis and and yields …",null,null],[3,"AxisIterMut","","An iterator that traverses over an axis and and yields …",null,null],[3,"ExactChunks","","Exact chunks producer and iterable.",null,null],[3,"ExactChunksIter","","Exact chunks iterator.",null,null],[3,"ExactChunksIterMut","","Exact chunks iterator.",null,null],[3,"ExactChunksMut","","Exact chunks producer and iterable.",null,null],[3,"IndexedIter","","An iterator over the indexes and elements of an array.",null,null],[3,"IndexedIterMut","","An iterator over the indexes and elements of an array …",null,null],[3,"Iter","","An iterator over the elements of an array.",null,null],[3,"IterMut","","An iterator over the elements of an array (mutable).",null,null],[3,"Lanes","","See <code>.lanes()</code> for more information.",null,null],[3,"LanesIter","","An iterator that traverses over all axes but one, and …",null,null],[3,"LanesIterMut","","An iterator that traverses over all dimensions but the …",null,null],[3,"LanesMut","","See <code>.lanes_mut()</code> for more information.",null,null],[3,"Windows","","Window producer and iterable",null,null],[14,"s","extendr_api::prelude","Slice argument constructor.",null,null],[14,"azip","","Array zip macro: lock step function application across …",null,null],[4,"FoldWhile","","Value controlling the execution of <code>.fold_while</code> on <code>Zip</code>.",null,null],[13,"Continue","","Continue folding with this value",33,null],[13,"Done","","Fold is complete and will return this value",33,null],[8,"IntoNdProducer","","Argument conversion into a producer.",null,null],[16,"Item","","The element produced per iteration.",34,null],[16,"Dim","","Dimension type of the producer",34,null],[16,"Output","","",34,null],[10,"into_producer","","Convert the value into an <code>NdProducer</code>.",34,[[]]],[8,"NdProducer","","A producer of an n-dimensional set of elements; for …",null,null],[16,"Item","","The element produced per iteration.",35,null],[16,"Dim","","Dimension type",35,null],[10,"__private__","","This trait is private to implement; this method exists to …",35,[[],["privatemarker",3]]],[3,"Zip","","Lock step function application across several arrays or …",null,null],[3,"OwnedRepr","","Array\'s representation.",null,null],[3,"OwnedRcRepr","","ArcArray\'s representation.",null,null],[8,"ScalarOperand","","Elements that can be used as direct operands in …",null,null],[5,"Dim","","Create a new dimension value.",null,[[]]],[5,"Ix0","","Create a zero-dimensional index",null,[[],["dim",3]]],[5,"Ix1","","Create a one-dimensional index",null,[[],["dim",3]]],[5,"Ix2","","Create a two-dimensional index",null,[[],["dim",3]]],[5,"Ix3","","Create a three-dimensional index",null,[[],["dim",3]]],[5,"Ix4","","Create a four-dimensional index",null,[[],["dim",3]]],[5,"Ix5","","Create a five-dimensional index",null,[[],["dim",3]]],[5,"Ix6","","Create a six-dimensional index",null,[[],["dim",3]]],[5,"IxDyn","","Create a dynamic-dimensional index",null,[[],[["dim",3],["ixdynimpl",3]]]],[6,"Ix0","","zero-dimensionial",null,null],[6,"Ix1","","one-dimensional",null,null],[6,"Ix2","","two-dimensional",null,null],[6,"Ix3","","three-dimensional",null,null],[6,"Ix4","","four-dimensional",null,null],[6,"Ix5","","five-dimensional",null,null],[6,"Ix6","","six-dimensional",null,null],[6,"IxDyn","","dynamic-dimensional",null,null],[6,"Array0","","zero-dimensional array",null,null],[6,"Array1","","one-dimensional array",null,null],[6,"Array2","","two-dimensional array",null,null],[6,"Array3","","three-dimensional array",null,null],[6,"Array4","","four-dimensional array",null,null],[6,"Array5","","five-dimensional array",null,null],[6,"Array6","","six-dimensional array",null,null],[6,"ArrayD","","dynamic-dimensional array",null,null],[6,"ArrayView0","","zero-dimensional array view",null,null],[6,"ArrayView1","","one-dimensional array view",null,null],[6,"ArrayView2","","two-dimensional array view",null,null],[6,"ArrayView3","","three-dimensional array view",null,null],[6,"ArrayView4","","four-dimensional array view",null,null],[6,"ArrayView5","","five-dimensional array view",null,null],[6,"ArrayView6","","six-dimensional array view",null,null],[6,"ArrayViewD","","dynamic-dimensional array view",null,null],[6,"ArrayViewMut0","","zero-dimensional read-write array view",null,null],[6,"ArrayViewMut1","","one-dimensional read-write array view",null,null],[6,"ArrayViewMut2","","two-dimensional read-write array view",null,null],[6,"ArrayViewMut3","","three-dimensional read-write array view",null,null],[6,"ArrayViewMut4","","four-dimensional read-write array view",null,null],[6,"ArrayViewMut5","","five-dimensional read-write array view",null,null],[6,"ArrayViewMut6","","six-dimensional read-write array view",null,null],[6,"ArrayViewMutD","","dynamic-dimensional read-write array view",null,null],[6,"RcArray1","","one-dimensional shared ownership array",null,null],[6,"RcArray2","","two-dimensional shared ownership array",null,null],[6,"ArcArray1","","one-dimensional shared ownership array",null,null],[6,"ArcArray2","","two-dimensional shared ownership array",null,null],[5,"arr0","","Create a zero-dimensional array with the element <code>x</code>.",null,[[],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[5,"arr1","","Create a one-dimensional array with elements from <code>xs</code>.",null,[[],[["dim",3],["arraybase",3],["ownedrepr",3]]]],[5,"rcarr1","","Create a one-dimensional array with elements from <code>xs</code>.",null,[[],[["arraybase",3],["ownedarcrepr",3],["dim",3]]]],[5,"aview0","","Create a zero-dimensional array view borrowing <code>x</code>.",null,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[5,"aview1","","Create a one-dimensional array view with elements …",null,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[5,"aview2","","Create a two-dimensional array view with elements …",null,[[],[["dim",3],["arraybase",3],["viewrepr",3]]]],[5,"aview_mut1","","Create a one-dimensional read-write array view with …",null,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[5,"aview_mut2","","Create a two-dimensional read-write array view with …",null,[[],[["arraybase",3],["viewrepr",3],["dim",3]]]],[8,"FixedInitializer","","Fixed-size array used for array initialization",null,null],[16,"Elem","","",36,null],[10,"as_init_slice","","",36,[[]]],[10,"len","","",36,[[]]],[5,"arr2","","Create a two-dimensional array with elements from <code>xs</code>.",null,[[],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[5,"rcarr2","","Create a two-dimensional array with elements from <code>xs</code>.",null,[[],[["ownedarcrepr",3],["arraybase",3],["dim",3]]]],[5,"arr3","","Create a three-dimensional array with elements from <code>xs</code>.",null,[[],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[5,"rcarr3","","Create a three-dimensional array with elements from <code>xs</code>.",null,[[],[["arraybase",3],["ownedarcrepr",3],["dim",3]]]],[3,"Dim","","Dimension description.",null,null],[23,"extendr","","Generate bindings for a single function.",null,null],[14,"extendr_module","","Define a module and export symbols to R Example:",null,null],[8,"FromRobj","","Trait used for incomming parameter conversion.",null,null],[11,"from_robj","","",37,[[["robj",4]],["result",4]]],[8,"IntoRobj","","",null,null],[10,"into_robj","","",38,[[],["robj",4]]],[8,"RobjItertools","","Extensions to iterators for R objects including […",null,null],[11,"collect_robj","","Convert a wide range of iterators to Robj.",39,[[],["robj",4]]],[3,"Function","","Wrapper for creating functions (CLOSSXP).",null,null],[0,"rmacros","extendr_api","rmacros - a set of macros to call actual R functions in a …",null,null],[0,"robj","","R object handling.",null,null],[11,"from_robj","extendr_api::prelude","",37,[[["robj",4]],["result",4]]],[11,"collect_robj","","Convert a wide range of iterators to Robj.",39,[[],["robj",4]]],[8,"FromRobj","extendr_api::robj","Trait used for incomming parameter conversion.",null,null],[11,"from_robj","extendr_api::prelude","",37,[[["robj",4]],["result",4]]],[8,"IntoRobj","extendr_api::robj","",null,null],[10,"into_robj","","",38,[[],["robj",4]]],[8,"ToVectorValue","","<code>ToVectorValue</code> is a trait that allows many different types …",null,null],[11,"sexptype","","",40,[[],["sexptype",6]]],[11,"to_real","","",40,[[]]],[11,"to_integer","","",40,[[]]],[11,"to_logical","","",40,[[]]],[11,"to_raw","","",40,[[]]],[11,"to_sexp","","",40,[[],["sexp",6]]],[8,"RobjItertools","","Extensions to iterators for R objects including […",null,null],[11,"collect_robj","extendr_api::prelude","Convert a wide range of iterators to Robj.",39,[[],["robj",4]]],[4,"Robj","extendr_api::robj","Wrapper for an R S-expression pointer (SEXP).",null,null],[11,"rtype","","Get the type of an R object.",41,[[],["rtype",4]]],[11,"len","","Get the extended length of the object.",41,[[]]],[11,"local","","Get a variable from an enviroment, but not its ancestors.",41,[[["into",8],["robj",4]],[["robj",4],["option",4]]]],[11,"set_local","","Set or define a variable in an enviroment.",41,[[["into",8],["robj",4]]]],[11,"parent","","Get the parent of an environment.",41,[[],[["robj",4],["option",4]]]],[11,"is_na","","Is this object is an NA scalar? Works for character, …",41,[[]]],[11,"as_integer_slice","","Get a read-only reference to the content of an integer …",41,[[],["option",4]]],[11,"as_integer_iter","","Get an iterator over integer elements of this slice.",41,[[],[["int",6],["option",4]]]],[11,"as_integer_vector","","Get a Vec copied from the object.",41,[[],[["vec",3],["option",4]]]],[11,"as_logical_slice","","Get a read-only reference to the content of a logical …",41,[[],["option",4]]],[11,"as_logical_vector","","Get a Vec copied from the object using the tri-state [Bool…",41,[[],[["option",4],["vec",3]]]],[11,"as_logical_iter","","Get an iterator over logical elements of this slice.",41,[[],[["option",4],["logical",6]]]],[11,"as_real_slice","","Get a read-only reference to the content of a double …",41,[[],["option",4]]],[11,"as_real_iter","","Get an iterator over real elements of this slice.",41,[[],[["real",6],["option",4]]]],[11,"as_real_vector","","Get a Vec copied from the object.",41,[[],[["vec",3],["option",4]]]],[11,"as_raw_slice","","Get a read-only reference to the content of an integer or …",41,[[],["option",4]]],[11,"as_integer_slice_mut","","Get a read-write reference to the content of an integer …",41,[[],["option",4]]],[11,"as_real_slice_mut","","Get a read-write reference to the content of a double …",41,[[],["option",4]]],[11,"as_raw_slice_mut","","Get a read-write reference to the content of a raw vector.",41,[[],["option",4]]],[11,"as_string_vector","","Get a vector of owned strings. Owned strings have long …",41,[[],[["option",4],["vec",3]]]],[11,"as_str_vector","","Get a vector of string references. String references …",41,[[],[["option",4],["vec",3]]]],[11,"as_str","","Get a read-only reference to a scalar string type.",41,[[],["option",4]]],[11,"as_integer","","Get a scalar integer.",41,[[],["option",4]]],[11,"as_real","","Get a scalar real.",41,[[],["option",4]]],[11,"as_bool","","Get a scalar rust boolean.",41,[[],["option",4]]],[11,"as_logical","","Get a scalar boolean as a tri-boolean [Bool] value.",41,[[],[["option",4],["bool",3]]]],[11,"eval","","Evaluate the expression in R and return an error or an R …",41,[[],[["result",6],["robj",4]]]],[11,"eval_blind","","Evaluate the expression and return NULL or an R object.",41,[[],["robj",4]]],[11,"is_owned","","Return true if the object is owned by this wrapper. If …",41,[[]]],[8,"AsTypedSlice","","Generic access to typed slices in an Robj.",null,null],[11,"as_typed_slice","","",42,[[],["option",4]]],[11,"as_typed_slice_mut","","",42,[[],["option",4]]],[11,"get_attrib","","Get a specific attribute as a borrowed robj if it exists.",41,[[],[["robj",4],["option",4]]]],[11,"set_attrib","","Set a specific attribute and return the object.",41,[[],[["result",6],["robj",4]]]],[11,"names","","Get the names attribute as a string iterator if one …",41,[[],[["option",4],["striter",3]]]],[11,"set_names","","Set the names attribute from a string iterator.",41,[[],[["result",6],["robj",4]]]],[11,"dim","","Get the dim attribute as an integer iterator if one …",41,[[],[["int",6],["option",4]]]],[11,"dimnames","","Get the dimnames attribute as a list iterator if one …",41,[[],[["listiter",3],["option",4]]]],[11,"as_named_list_iter","","Return an iterator over names and values of a list if …",41,[[],[["namedlistiter",6],["option",4]]]],[11,"class","","Get the class attribute as a string iterator if one …",41,[[],[["option",4],["striter",3]]]],[11,"set_class","","Set the class attribute from a string iterator.",41,[[],[["result",6],["robj",4]]]],[11,"inherits","","Return true if this class inherits this class.",41,[[]]],[11,"levels","","Get the levels attribute as a string iterator if one …",41,[[],[["option",4],["striter",3]]]],[11,"ls","","Get the names in an environment.",41,[[],[["option",4],["vec",3]]]],[0,"thread_safety","extendr_api","Provide limited protection for multithreaded access to …",null,null],[5,"this_thread_id","extendr_api::thread_safety","",null,[[]]],[5,"single_threaded","","Run a function single threaded. Note: This will fail …",null,[[]]],[5,"throw_r_error","","",null,[[["asref",8]]]],[5,"catch_r_error","","Wrap an R function such as Rf_findFunction and convert …",null,[[],[["result",6],["sexp",6]]]],[0,"wrapper","extendr_api","Wrappers are lightweight proxies for references to R …",null,null],[11,"new","extendr_api::prelude","Make a function from an Robj or return an error.",43,[[["robj",4]],["result",6]]],[11,"from_parts","","Make a function from parts.",43,[[["robj",4]],["result",6]]],[11,"call","","Do the equivalent of x(a, b, c)",43,[[["robj",4]],[["result",6],["robj",4]]]],[11,"formals","","Get the formal arguments of the function.",43,[[],["robj",4]]],[11,"body","","Get the body of the function.",43,[[],["robj",4]]],[11,"env","","Get the environment of the function.",43,[[],["robj",4]]],[3,"Function","extendr_api::wrapper","Wrapper for creating functions (CLOSSXP).",null,null],[3,"Symbol","","Wrapper for creating symbols.",null,null],[12,"0","","",44,null],[3,"Character","","Wrapper for creating character objects. These are used …",null,null],[12,"0","","",45,null],[3,"Raw","","Wrapper for creating raw (byte) objects.",null,null],[12,"0","","",46,null],[3,"Lang","","Wrapper for creating language objects.",null,null],[12,"0","","",47,null],[3,"Pairlist","","Wrapper for creating pair list (LISTSXP) objects.",null,null],[12,"names_and_values","","",48,null],[3,"List","","Wrapper for creating list (VECSXP) objects.",null,null],[12,"0","","",49,null],[3,"Expr","","Wrapper for creating expression objects.",null,null],[12,"0","","",50,null],[3,"Env","","Wrapper for creating environments.",null,null],[12,"parent","","",51,null],[12,"names_and_values","","",51,null],[3,"Promise","","",null,null],[12,"code","","",52,null],[12,"env","","",52,null],[12,"value","","",52,null],[12,"seen","","",52,null],[3,"Primitive","","Wrapper for creating and reading Primitive functions.",null,null],[12,"0","","",53,null],[4,"Nullable","","Wrapper for handling potentially NULL values.",null,null],[13,"NotNull","","",54,null],[13,"Null","","",54,null],[11,"as_symbol","extendr_api::robj","Convert a symbol object to a Symbol wrapper.",41,[[],[["symbol",3],["option",4]]]],[11,"as_character","","Convert a character object to a Character wrapper.",41,[[],[["option",4],["character",3]]]],[11,"as_raw","","Convert a raw object to a Character wrapper.",41,[[],[["raw",3],["option",4]]]],[11,"as_lang","","Convert a language object to a Lang wrapper.",41,[[],[["lang",3],["option",4]]]],[11,"as_pairlist","","Convert a pair list object (LISTSXP) to a Pairlist …",41,[[],[["pairlist",3],["option",4]]]],[11,"as_list","","Convert a list object (VECSXP) to a List wrapper.",41,[[],[["list",3],["option",4]]]],[11,"as_expr","","Convert an expression object (EXPRSXP) to a Expr wrapper.",41,[[],[["expr",3],["option",4]]]],[11,"as_environment","","Convert an environment object (ENVSXP) to a Env wrapper.",41,[[],[["option",4],["env",3]]]],[11,"as_func","","Convert a function object (CLOSXP) to a Function wrapper.",41,[[],[["option",4],["function",3]]]],[11,"as_promise","","Get a wrapper for a promise.",41,[[],[["option",4],["promise",3]]]],[8,"SymPair","extendr_api::wrapper","",null,null],[10,"sym_pair","","",55,[[]]],[0,"robj_ndarray","extendr_api","",null,null],[17,"TRUE","","TRUE value eg. <code>r!(TRUE)</code>",null,null],[17,"FALSE","","FALSE value eg. <code>r!(FALSE)</code>",null,null],[17,"NULL","","NULL value eg. <code>r!(NULL)</code>",null,null],[17,"NA_INTEGER","","NA value for integers eg. <code>r!(NA_INTEGER)</code>",null,null],[17,"NA_REAL","","NA value for real values eg. <code>r!(NA_REAL)</code>",null,null],[17,"NA_STRING","","NA value for strings. <code>r!(NA_STRING)</code>",null,null],[17,"NA_LOGICAL","","NA value for logical. <code>r!(NA_LOGICAL)</code>",null,null],[8,"IsNA","","Return true if this primitive is NA.",null,null],[10,"is_na","","",56,[[]]],[4,"RType","","Type of R objects used by [Robj::rtype].",null,null],[13,"Null","","",57,null],[13,"Symbol","","",57,null],[13,"Pairlist","","",57,null],[13,"Function","","",57,null],[13,"Enviroment","","",57,null],[13,"Promise","","",57,null],[13,"Language","","",57,null],[13,"Special","","",57,null],[13,"Builtin","","",57,null],[13,"Character","","",57,null],[13,"Logical","","",57,null],[13,"Integer","","",57,null],[13,"Real","","",57,null],[13,"Complex","","",57,null],[13,"String","","",57,null],[13,"Dot","","",57,null],[13,"Any","","",57,null],[13,"List","","",57,null],[13,"Expression","","",57,null],[13,"Bytecode","","",57,null],[13,"ExternalPtr","","",57,null],[13,"WeakRef","","",57,null],[13,"Raw","","",57,null],[13,"S4","","",57,null],[13,"Unknown","","",57,null],[14,"call","","The call! macro calls an R function with Rust parameters. …",null,null],[14,"lang","","A macro for constructing R langage objects.",null,null],[14,"r","","Convert a rust expression to an R object.",null,null],[14,"R","","Call inline R source code from Rust.",null,null],[14,"var","","Get a local variable from the calling function or a …",null,null],[14,"global","","Get a global variable.",null,null],[14,"sym","","The sym! macro install symbols. You should cache your …",null,null],[14,"list","","Create a list.",null,null],[14,"pairlist","","Create a pairlist.",null,null],[14,"data_frame","","Create a dataframe.",null,null],[14,"factor","","Create a factor.",null,null],[14,"rprint","","Print via the R output stream.",null,null],[14,"rprintln","","Print with a newline via the R output stream.",null,null],[14,"reprint","","Print via the R error stream.",null,null],[14,"reprintln","","Print with a newline via the R output stream.",null,null],[14,"test","","Macro for running tests.",null,null],[11,"from","extendr_api::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","extendr_api::iter","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"into_iter","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","extendr_api::logical","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","extendr_api::matrix","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","extendr_api::metadata","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","extendr_api::prelude","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_producer","","",59,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"index_checked","","",60,[[],["option",4]]],[11,"index_unchecked","","",60,[[]]],[11,"into_shape","","",60,[[],["shape",3]]],[11,"f","","",60,[[],["shape",3]]],[11,"set_f","","",60,[[],["shape",3]]],[11,"strides","","",60,[[],["strideshape",3]]],[11,"into_dimension","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_shape","","",66,[[],["shape",3]]],[11,"f","","",66,[[],["shape",3]]],[11,"set_f","","",66,[[],["shape",3]]],[11,"strides","","",66,[[],["strideshape",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","extendr_api::prelude::iter","",69,[[]]],[11,"into","","",69,[[]]],[11,"into_iter","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_producer","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"into_iter","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"into_iter","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"into_iter","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_producer","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"into_iter","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_producer","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_producer","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"into_iter","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"into_iter","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_producer","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"into_iter","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"into_iter","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into_iter","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_producer","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"into_iter","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"into_iter","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_producer","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_producer","","",88,[[]]],[11,"from","extendr_api::prelude","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","extendr_api::robj","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","extendr_api::wrapper","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","extendr_api","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"next","extendr_api::prelude::iter","",85,[[],["option",4]]],[11,"size_hint","","",85,[[]]],[11,"next","","",78,[[],["option",4]]],[11,"size_hint","","",78,[[]]],[11,"next","","",75,[[],["option",4]]],[11,"size_hint","","",75,[[]]],[11,"next","","",74,[[],["option",4]]],[11,"size_hint","","",74,[[]]],[11,"next","","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"next","","",80,[[],["option",4]]],[11,"size_hint","","",80,[[]]],[11,"next","","",69,[[],["option",4]]],[11,"fold","","",69,[[]]],[11,"size_hint","","",69,[[]]],[11,"next","","",82,[[],["option",4]]],[11,"size_hint","","",82,[[]]],[11,"fold","","",82,[[]]],[11,"nth","","",82,[[],["option",4]]],[11,"collect","","",82,[[]]],[11,"all","","",82,[[]]],[11,"any","","",82,[[]]],[11,"find","","",82,[[],["option",4]]],[11,"find_map","","",82,[[],["option",4]]],[11,"count","","",82,[[]]],[11,"last","","",82,[[],["option",4]]],[11,"position","","",82,[[],["option",4]]],[11,"next","","",86,[[],["option",4]]],[11,"size_hint","","",86,[[]]],[11,"next","","",71,[[],["option",4]]],[11,"size_hint","","",71,[[]]],[11,"fold","","",71,[[]]],[11,"next","","",83,[[],["option",4]]],[11,"size_hint","","",83,[[]]],[11,"fold","","",83,[[]]],[11,"nth","","",83,[[],["option",4]]],[11,"collect","","",83,[[]]],[11,"all","","",83,[[]]],[11,"any","","",83,[[]]],[11,"find","","",83,[[],["option",4]]],[11,"find_map","","",83,[[],["option",4]]],[11,"count","","",83,[[]]],[11,"last","","",83,[[],["option",4]]],[11,"position","","",83,[[],["option",4]]],[11,"next","","",72,[[],["option",4]]],[11,"size_hint","","",72,[[]]],[11,"next","","",81,[[],["option",4]]],[11,"size_hint","","",81,[[]]],[11,"next","","",77,[[],["option",4]]],[11,"size_hint","","",77,[[]]],[11,"fmt","extendr_api::prelude","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"mul_assign","","",60,[[]]],[11,"mul_assign","","",59,[[["arraybase",3]]]],[11,"mul_assign","","",60,[[["dim",3]]]],[11,"mul_assign","","",60,[[["dim",3]]]],[11,"mul_assign","","",59,[[]]],[11,"shr_assign","","",59,[[["arraybase",3]]]],[11,"shr_assign","","",59,[[]]],[11,"as_ref","","",68,[[],["sliceinfo",3]]],[11,"as_ref","","",68,[[]]],[11,"into_owned","","",63,[[["arraybase",3],["viewrepr",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"into_owned","","",63,[[["arraybase",3],["viewrepr",3]],[["ownedrepr",3],["arraybase",3]]]],[11,"into_owned","","",20,[[["arraybase",3],["cowrepr",4]],[["ownedrepr",3],["arraybase",3]]]],[11,"into_owned","","",61,[[["ownedarcrepr",3],["arraybase",3]],[["ownedrepr",3],["arraybase",3]]]],[11,"into_owned","","",90,[[["arraybase",3],["ownedrepr",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"next_back","extendr_api::prelude::iter","",75,[[],["option",4]]],[11,"next_back","","",73,[[],["option",4]]],[11,"next_back","","",69,[[],["option",4]]],[11,"next_back","","",83,[[],["option",4]]],[11,"nth_back","","",83,[[],["option",4]]],[11,"rfold","","",83,[[]]],[11,"next_back","","",82,[[],["option",4]]],[11,"nth_back","","",82,[[],["option",4]]],[11,"rfold","","",82,[[]]],[11,"next_back","","",72,[[],["option",4]]],[11,"next_back","","",74,[[],["option",4]]],[11,"cmp","extendr_api::prelude","",17,[[["axis",3]],["ordering",4]]],[11,"bitand","","",59,[[],["arraybase",3]]],[11,"bitand","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"bitand","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"bitor_assign","","",59,[[]]],[11,"bitor_assign","","",59,[[["arraybase",3]]]],[11,"fmt","","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","extendr_api::prelude::iter","",69,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","extendr_api::prelude","",60,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",61,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",68,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",65,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","extendr_api::prelude::iter","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","extendr_api::prelude","",66,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","extendr_api::prelude::iter","",70,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","extendr_api::prelude","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref_mut","","",66,[[]]],[11,"into_shape","","",64,[[],["shape",3]]],[11,"f","","",64,[[],["shape",3]]],[11,"set_f","","",64,[[],["shape",3]]],[11,"strides","","",64,[[],["strideshape",3]]],[11,"len","extendr_api::prelude::iter","",83,[[]]],[11,"len","","",74,[[]]],[11,"len","","",80,[[]]],[11,"len","","",75,[[]]],[11,"len","","",86,[[]]],[11,"len","","",81,[[]]],[11,"len","","",82,[[]]],[11,"len","","",85,[[]]],[11,"shl_assign","extendr_api::prelude","",59,[[]]],[11,"shl_assign","","",59,[[["arraybase",3]]]],[11,"remove_axis","","",60,[[["axis",3]]]],[11,"remove_axis","","",60,[[["axis",3]],[["dim",3],["ixdynimpl",3]]]],[11,"remove_axis","","",60,[[["axis",3]],["dim",3]]],[11,"remove_axis","","",60,[[["axis",3]]]],[11,"remove_axis","","",60,[[["axis",3]]]],[11,"remove_axis","","",60,[[["axis",3]],["dim",3]]],[11,"remove_axis","","",60,[[["axis",3]]]],[11,"fmt","","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"div_assign","","",59,[[["arraybase",3]]]],[11,"div_assign","","",59,[[]]],[11,"shl","","",59,[[],["arraybase",3]]],[11,"shl","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"shl","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"hash","","",66,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",27,[[]]],[11,"new","","",61,[[["global",3],["vec",3]],["ownedarcrepr",3]]],[11,"into_shared","","",61,[[],["ownedarcrepr",3]]],[11,"new","","",90,[[["global",3],["vec",3]],["ownedrepr",3]]],[11,"into_shared","","",90,[[],["ownedarcrepr",3]]],[11,"rem","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"rem","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"rem","","",59,[[],["arraybase",3]]],[11,"div","","",59,[[],["arraybase",3]]],[11,"div","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"div","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"from_iter","","Create a one-dimensional array from an iterable.",59,[[],[["arraybase",3],["dim",3]]]],[11,"index","","",60,[[]]],[11,"index","","",60,[[]]],[11,"index","","",60,[[]]],[11,"index","","",60,[[]]],[11,"index","","",59,[[]]],[11,"index","","",60,[[]]],[11,"index","","",66,[[]]],[11,"index","","",60,[[]]],[11,"index","","",60,[[]]],[11,"index","","",60,[[]]],[11,"neg","","Perform an elementwise negation of <code>self</code> and return the …",59,[[],["arraybase",3]]],[11,"not","","Perform an elementwise unary not of <code>self</code> and return the …",59,[[],["arraybase",3]]],[11,"_data_slice","","",63,[[],["option",4]]],[11,"_data_slice","","",62,[[],["option",4]]],[11,"_data_slice","","",61,[[],["option",4]]],[11,"_data_slice","","",20,[[],["option",4]]],[11,"_data_slice","","",63,[[],["option",4]]],[11,"_data_slice","","",90,[[],["option",4]]],[11,"_data_slice","","",62,[[],["option",4]]],[11,"zero","","",60,[[],["dim",3]]],[11,"is_zero","","",60,[[]]],[11,"zero","","",60,[[],["dim",3]]],[11,"is_zero","","",60,[[]]],[11,"zero","","",60,[[],["dim",3]]],[11,"is_zero","","",60,[[]]],[11,"zero","","",60,[[],["dim",3]]],[11,"is_zero","","",60,[[]]],[11,"zero","","",60,[[],["dim",3]]],[11,"is_zero","","",60,[[]]],[11,"zero","","",60,[[],["dim",3]]],[11,"is_zero","","",60,[[]]],[11,"zero","","",60,[[],["dim",3]]],[11,"is_zero","","",60,[[]]],[11,"sub","","",60,[[["dim",3]],["dim",3]]],[11,"sub","","",60,[[],["dim",3]]],[11,"sub","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"sub","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"sub","","",59,[[],["arraybase",3]]],[11,"partial_cmp","","",17,[[["axis",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["axis",3]]]],[11,"le","","",17,[[["axis",3]]]],[11,"gt","","",17,[[["axis",3]]]],[11,"ge","","",17,[[["axis",3]]]],[11,"dot","","",59,[[["arraybase",3]],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[11,"dot","","",59,[[["arraybase",3]],[["dim",3],["arraybase",3],["ownedrepr",3]]]],[11,"dot","","Compute the dot product of one-dimensional arrays.",59,[[["arraybase",3]]]],[11,"dot","","Perform the matrix multiplication of the row vector <code>self</code> …",59,[[["arraybase",3]],[["dim",3],["arraybase",3],["ownedrepr",3]]]],[11,"contiguous_stride","","",59,[[]]],[11,"contiguous_stride","","",59,[[]]],[11,"contiguous_stride","extendr_api::prelude::iter","",70,[[]]],[11,"contiguous_stride","extendr_api::prelude","",59,[[]]],[11,"contiguous_stride","extendr_api::prelude::iter","",74,[[]]],[11,"contiguous_stride","extendr_api::prelude","",59,[[]]],[11,"contiguous_stride","extendr_api::prelude::iter","",75,[[]]],[11,"shr","extendr_api::prelude","",59,[[["arraybase",3]],["arraybase",3]]],[11,"shr","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"shr","","",59,[[],["arraybase",3]]],[11,"index_checked","","",60,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",60,[[["dim",3]]]],[11,"index_checked","","",60,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",60,[[["dim",3]]]],[11,"index_checked","","",60,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",60,[[["dim",3]]]],[11,"index_checked","","",60,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",60,[[["dim",3]]]],[11,"index_checked","","",60,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",60,[[["dim",3]]]],[11,"index_checked","","",60,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",60,[[["dim",3]]]],[11,"index_checked","","",60,[[["dim",3]],["option",4]]],[11,"index_unchecked","","",60,[[["dim",3]]]],[11,"ndim","","",60,[[]]],[11,"into_pattern","","",60,[[]]],[11,"slice","","",60,[[]]],[11,"slice_mut","","",60,[[]]],[11,"size","","",60,[[]]],[11,"zeros","","",60,[[],["dim",3]]],[11,"next_for","","",60,[[["dim",3]],[["dim",3],["option",4]]]],[11,"stride_offset","","Self is an index, return the stride offset",60,[[["dim",3]]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",60,[[["dim",3]],["option",4]]],[11,"_fastest_varying_stride_order","","",60,[[],["dim",3]]],[11,"insert_axis","","",60,[[["axis",3]]]],[11,"try_remove_axis","","",60,[[["axis",3]]]],[11,"ndim","","",60,[[]]],[11,"into_pattern","","",60,[[]]],[11,"slice","","",60,[[]]],[11,"slice_mut","","",60,[[]]],[11,"zeros","","",60,[[],["dim",3]]],[11,"insert_axis","","",60,[[["axis",3]]]],[11,"try_remove_axis","","",60,[[["axis",3]]]],[11,"ndim","","",60,[[]]],[11,"into_pattern","","",60,[[]]],[11,"slice","","",60,[[]]],[11,"slice_mut","","",60,[[]]],[11,"zeros","","",60,[[],["dim",3]]],[11,"insert_axis","","",60,[[["axis",3]]]],[11,"try_remove_axis","","",60,[[["axis",3]]]],[11,"ndim","","",60,[[]]],[11,"into_pattern","","",60,[[]]],[11,"slice","","",60,[[]]],[11,"slice_mut","","",60,[[]]],[11,"zeros","","",60,[[],["dim",3]]],[11,"insert_axis","","",60,[[["axis",3]]]],[11,"try_remove_axis","","",60,[[["axis",3]]]],[11,"ndim","","",60,[[]]],[11,"slice","","",60,[[]]],[11,"slice_mut","","",60,[[]]],[11,"_fastest_varying_stride_order","","",60,[[],["dim",3]]],[11,"into_pattern","","",60,[[]]],[11,"zeros","","",60,[[],["dim",3]]],[11,"next_for","","",60,[[["dim",3]],[["dim",3],["option",4]]]],[11,"insert_axis","","",60,[[["axis",3]]]],[11,"try_remove_axis","","",60,[[["axis",3]]]],[11,"ndim","","",60,[[]]],[11,"into_pattern","","",60,[[]]],[11,"slice","","",60,[[]]],[11,"slice_mut","","",60,[[]]],[11,"zeros","","",60,[[],["dim",3]]],[11,"next_for","","",60,[[["dim",3]],[["dim",3],["option",4]]]],[11,"equal","","",60,[[["dim",3]]]],[11,"size","","",60,[[]]],[11,"size_checked","","",60,[[],["option",4]]],[11,"last_elem","","",60,[[]]],[11,"set_last_elem","","",60,[[]]],[11,"default_strides","","",60,[[],["dim",3]]],[11,"fortran_strides","","",60,[[],["dim",3]]],[11,"_fastest_varying_stride_order","","",60,[[],["dim",3]]],[11,"min_stride_axis","","",60,[[["dim",3]],["axis",3]]],[11,"first_index","","",60,[[],[["dim",3],["option",4]]]],[11,"stride_offset","","Self is an index, return the stride offset",60,[[["dim",3]]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",60,[[["dim",3]],["option",4]]],[11,"insert_axis","","",60,[[["axis",3]]]],[11,"try_remove_axis","","",60,[[["axis",3]]]],[11,"ndim","","",60,[[]]],[11,"slice","","",60,[[]]],[11,"slice_mut","","",60,[[]]],[11,"into_pattern","","",60,[[]]],[11,"zeros","","",60,[[],[["dim",3],["ixdynimpl",3]]]],[11,"insert_axis","","",60,[[["axis",3]]]],[11,"try_remove_axis","","",60,[[["axis",3]]]],[11,"from_dimension","","",60,[[],[["dim",3],["option",4]]]],[11,"ndim","","",60,[[]]],[11,"slice","","",60,[[]]],[11,"slice_mut","","",60,[[]]],[11,"into_pattern","","",60,[[]]],[11,"zeros","","",60,[[],["dim",3]]],[11,"next_for","","",60,[[["dim",3]],[["option",4],["dim",3]]]],[11,"equal","","",60,[[["dim",3]]]],[11,"size","","",60,[[]]],[11,"size_checked","","",60,[[],["option",4]]],[11,"default_strides","","",60,[[],["dim",3]]],[11,"_fastest_varying_stride_order","","",60,[[],["dim",3]]],[11,"min_stride_axis","","",60,[[["dim",3]],["axis",3]]],[11,"max_stride_axis","","",60,[[["dim",3]],["axis",3]]],[11,"first_index","","",60,[[],[["option",4],["dim",3]]]],[11,"stride_offset","","Self is an index, return the stride offset",60,[[["dim",3]]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",60,[[["dim",3]],["option",4]]],[11,"insert_axis","","",60,[[["axis",3]]]],[11,"try_remove_axis","","",60,[[["axis",3]]]],[11,"default","","",66,[[],["ixdynimpl",3]]],[11,"default","","",60,[[],["dim",3]]],[11,"default","","",59,[[],["arraybase",3]]],[11,"clone_with_ptr","","",20,[[["nonnull",3]]]],[11,"clone_with_ptr","","",62,[[["nonnull",3]]]],[11,"clone_with_ptr","","",63,[[["nonnull",3]]]],[11,"clone_with_ptr","","",61,[[["nonnull",3]]]],[11,"clone_with_ptr","","",62,[[["nonnull",3]]]],[11,"clone_with_ptr","","",90,[[["nonnull",3]]]],[11,"clone_from_with_ptr","","",90,[[["nonnull",3],["ownedrepr",3]],["nonnull",3]]],[11,"rem_assign","","",59,[[["arraybase",3]]]],[11,"rem_assign","","",59,[[]]],[11,"into_iter","extendr_api::prelude::iter","",87,[[]]],[11,"into_iter","","",70,[[]]],[11,"into_iter","extendr_api::prelude","",59,[[]]],[11,"into_iter","extendr_api::prelude::iter","",76,[[]]],[11,"into_iter","","",88,[[]]],[11,"into_iter","extendr_api::prelude","",59,[[]]],[11,"into_iter","extendr_api::prelude::iter","",79,[[]]],[11,"into_iter","","",84,[[]]],[11,"fmt","extendr_api::prelude","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"into_dimension","","",66,[[]]],[11,"bitor","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"bitor","","",59,[[],["arraybase",3]]],[11,"bitor","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"sub_assign","","",60,[[["dim",3]]]],[11,"sub_assign","","",59,[[]]],[11,"sub_assign","","",59,[[["arraybase",3]]]],[11,"sub_assign","","",60,[[]]],[11,"sub_assign","","",60,[[["dim",3]]]],[11,"fmt","","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"drop","","",90,[[]]],[11,"index_mut","","",66,[[]]],[11,"index_mut","","",60,[[]]],[11,"index_mut","","",60,[[]]],[11,"index_mut","","",60,[[]]],[11,"index_mut","","",60,[[]]],[11,"index_mut","","",60,[[]]],[11,"index_mut","","",60,[[]]],[11,"index_mut","","",60,[[]]],[11,"index_mut","","",59,[[]]],[11,"index_mut","","",60,[[]]],[11,"add_assign","","",59,[[["arraybase",3]]]],[11,"add_assign","","",59,[[]]],[11,"add_assign","","",60,[[["dim",3]]]],[11,"add_assign","","",60,[[["dim",3]]]],[11,"add_assign","","",60,[[]]],[11,"fmt","","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",27,[[["range",3]],["sliceorindex",4]]],[11,"from","","",26,[[["range",3]],["slice",3]]],[11,"from","","",26,[[["rangefrom",3]],["slice",3]]],[11,"from","","",27,[[],["sliceorindex",4]]],[11,"from","","",27,[[["rangeto",3]],["sliceorindex",4]]],[11,"from","","Create a <code>Shape</code> from <code>dimension</code>, using the default memory …",64,[[],["shape",3]]],[11,"from","","",26,[[["rangeinclusive",3]],["slice",3]]],[11,"from","","",66,[[],["ixdynimpl",3]]],[11,"from","","",26,[[["rangefrom",3]],["slice",3]]],[11,"from","","",27,[[["range",3]],["sliceorindex",4]]],[11,"from","","",26,[[["rangefull",3]],["slice",3]]],[11,"from","","Converts the <code>Vec</code> of arrays to an owned 2-D array.",59,[[["global",3],["vec",3]],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[11,"from","","",26,[[["range",3]],["slice",3]]],[11,"from","","",27,[[["rangefrom",3]],["sliceorindex",4]]],[11,"from","","",59,[[["arraybase",3],["viewrepr",3]],[["arraybase",3],["cowrepr",4]]]],[11,"from","","",27,[[],["sliceorindex",4]]],[11,"from","","",27,[[["rangeinclusive",3]],["sliceorindex",4]]],[11,"from","","Create a one-dimensional read-only array view of the data …",59,[[],[["arraybase",3],["viewrepr",3],["dim",3]]]],[11,"from","","",27,[[["rangetoinclusive",3]],["sliceorindex",4]]],[11,"from","","",26,[[["rangeto",3]],["slice",3]]],[11,"from","","Create a read-write array view of the array.",59,[[["arraybase",3]],[["arraybase",3],["viewrepr",3]]]],[11,"from","","",26,[[["rangeto",3]],["slice",3]]],[11,"from","","",26,[[["rangetoinclusive",3]],["slice",3]]],[11,"from","","Create a one-dimensional array from a vector (no copying …",59,[[["global",3],["vec",3]],[["arraybase",3],["dim",3]]]],[11,"from","","",27,[[["rangeinclusive",3]],["sliceorindex",4]]],[11,"from","","",27,[[["range",3]],["sliceorindex",4]]],[11,"from","","",27,[[["rangefull",3]],["sliceorindex",4]]],[11,"from","","",26,[[["rangetoinclusive",3]],["slice",3]]],[11,"from","","",27,[[["rangeto",3]],["sliceorindex",4]]],[11,"from","","",27,[[["rangetoinclusive",3]],["sliceorindex",4]]],[11,"from","","",66,[[["global",3],["vec",3]],["ixdynimpl",3]]],[11,"from","","",26,[[["rangefrom",3]],["slice",3]]],[11,"from","","",27,[[["rangefrom",3]],["sliceorindex",4]]],[11,"from","","",27,[[["rangefrom",3]],["sliceorindex",4]]],[11,"from","","",27,[[["rangeto",3]],["sliceorindex",4]]],[11,"from","","",27,[[["rangeinclusive",3]],["sliceorindex",4]]],[11,"from","","Converts the <code>Vec</code> of arrays to an owned 3-D array.",59,[[["global",3],["vec",3]],[["arraybase",3],["ownedrepr",3],["dim",3]]]],[11,"from","","",26,[[["rangeinclusive",3]],["slice",3]]],[11,"from","","",26,[[["rangeinclusive",3]],["slice",3]]],[11,"from","","",26,[[["range",3]],["slice",3]]],[11,"from","","",65,[[],["strideshape",3]]],[11,"from","","",27,[[["slice",3]],["sliceorindex",4]]],[11,"from","","",27,[[],["sliceorindex",4]]],[11,"from","","",59,[[["arraybase",3],["ownedrepr",3]],[["arraybase",3],["cowrepr",4]]]],[11,"from","","Create a one-dimensional read-write array view of the …",59,[[],[["dim",3],["arraybase",3],["viewrepr",3]]]],[11,"from","","Create a read-only array view of the array.",59,[[["arraybase",3]],[["arraybase",3],["viewrepr",3]]]],[11,"from","","",26,[[["rangetoinclusive",3]],["slice",3]]],[11,"from","","",26,[[["rangeto",3]],["slice",3]]],[11,"from","","",27,[[["rangetoinclusive",3]],["sliceorindex",4]]],[11,"bitxor","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"bitxor","","",59,[[],["arraybase",3]]],[11,"bitxor","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"deref","","",68,[[]]],[11,"deref","","",66,[[]]],[11,"bitand_assign","","",59,[[]]],[11,"bitand_assign","","",59,[[["arraybase",3]]]],[11,"mul","","",60,[[["dim",3]],["dim",3]]],[11,"mul","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"mul","","",59,[[],["arraybase",3]]],[11,"mul","","",60,[[],["dim",3]]],[11,"mul","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"clone","","",65,[[],["strideshape",3]]],[11,"clone","extendr_api::prelude::iter","",88,[[],["windows",3]]],[11,"clone","extendr_api::prelude","",25,[[],["errorkind",4]]],[11,"clone","","",64,[[],["shape",3]]],[11,"clone","extendr_api::prelude::iter","",71,[[],["indicesiter",3]]],[11,"clone","extendr_api::prelude","",66,[[],["ixdynimpl",3]]],[11,"clone","","",26,[[],["slice",3]]],[11,"clone","extendr_api::prelude::iter","",85,[[],["lanesiter",3]]],[11,"clone","","",69,[[],["axes",3]]],[11,"clone","extendr_api::prelude","",33,[[],["foldwhile",4]]],[11,"clone","","",60,[[],["dim",3]]],[11,"clone","extendr_api::prelude::iter","",84,[[],["lanes",3]]],[11,"clone","extendr_api::prelude","",68,[[],["sliceinfo",3]]],[11,"clone","","",89,[[],["zip",3]]],[11,"clone","extendr_api::prelude::iter","",77,[[],["exactchunksiter",3]]],[11,"clone","extendr_api::prelude","",90,[[],["ownedrepr",3]]],[11,"clone_from","","",90,[[["ownedrepr",3]]]],[11,"clone","","",61,[[],["ownedarcrepr",3]]],[11,"clone","extendr_api::prelude::iter","",70,[[],["indices",3]]],[11,"clone","extendr_api::prelude","",59,[[],["arraybase",3]]],[11,"clone_from","","<code>Array</code> implements <code>.clone_from()</code> to reuse an array\'s …",59,[[["arraybase",3]]]],[11,"clone","","",67,[[],["shapeerror",3]]],[11,"clone","extendr_api::prelude::iter","",76,[[],["exactchunks",3]]],[11,"clone","extendr_api::prelude","",22,[[],["axisdescription",3]]],[11,"clone","","",27,[[],["sliceorindex",4]]],[11,"clone","","",63,[[],["viewrepr",3]]],[11,"clone","extendr_api::prelude::iter","",72,[[],["axischunksiter",3]]],[11,"clone","","",74,[[],["axisiter",3]]],[11,"clone","extendr_api::prelude","",62,[[],["rawviewrepr",3]]],[11,"clone","","",17,[[],["axis",3]]],[11,"clone","extendr_api::prelude::iter","",82,[[],["iter",3]]],[11,"clone","","",80,[[],["indexediter",3]]],[11,"eq","extendr_api::prelude","",26,[[["slice",3]]]],[11,"ne","","",26,[[["slice",3]]]],[11,"eq","","",25,[[["errorkind",4]]]],[11,"eq","","",17,[[["axis",3]]]],[11,"ne","","",17,[[["axis",3]]]],[11,"eq","","",27,[[["sliceorindex",4]]]],[11,"ne","","",27,[[["sliceorindex",4]]]],[11,"eq","","",60,[[]]],[11,"eq","","",67,[[["shapeerror",3]]]],[11,"eq","","",60,[[["dim",3]]]],[11,"ne","","",60,[[["dim",3]]]],[11,"eq","","",59,[[["arraybase",3]]]],[11,"eq","","",66,[[["ixdynimpl",3]]]],[11,"ne","","",66,[[["ixdynimpl",3]]]],[11,"bitxor_assign","","",59,[[["arraybase",3]]]],[11,"bitxor_assign","","",59,[[]]],[11,"index","","Convert a mutable array view to a mutable reference of a …",59,[[]]],[11,"get","","Convert a mutable array view to a mutable reference of a …",59,[[],["option",4]]],[11,"uget","","Convert a mutable array view to a mutable reference of a …",59,[[]]],[11,"try_ensure_unique","","",90,[[["arraybase",3]]]],[11,"try_is_unique","","",90,[[],["option",4]]],[11,"try_ensure_unique","","",20,[[["arraybase",3]]]],[11,"try_is_unique","","",20,[[],["option",4]]],[11,"try_ensure_unique","","",63,[[["arraybase",3]]]],[11,"try_is_unique","","",63,[[],["option",4]]],[11,"try_ensure_unique","","",62,[[["arraybase",3]]]],[11,"try_is_unique","","",62,[[],["option",4]]],[11,"try_ensure_unique","","",61,[[["arraybase",3]]]],[11,"try_is_unique","","",61,[[],["option",4]]],[11,"add","","",60,[[],["dim",3]]],[11,"add","","",59,[[],["arraybase",3]]],[11,"add","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"add","","",59,[[["arraybase",3]],["arraybase",3]]],[11,"add","","",60,[[["dim",3]],["dim",3]]],[11,"from_robj","extendr_api::iter","",7,[[["robj",4]],["result",4]]],[11,"from_robj","","",3,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api","",91,[[["robj",4]],["result",4]]],[11,"from_robj","","",92,[[["robj",4]],["result",4]]],[11,"from_robj","","",93,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api::robj","",41,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api::wrapper","",44,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api::matrix","",9,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api","",12,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api::prelude","Convert an object that may be null to a rust type.",43,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api::wrapper","Convert an object that may be null to a rust type.",54,[[["robj",4]],["result",4]]],[11,"from_robj","extendr_api","Convert an R object to a <code>ndarray</code> ArrayView1.",94,[[["robj",4]],["result",4]]],[11,"from_robj","","Convert an R object to a <code>ndarray</code> ArrayView2.",95,[[["robj",4]],["result",4]]],[11,"from_robj","","Convert an R object to a <code>ndarray</code> ArrayView2.",95,[[["robj",4]],["result",4]]],[11,"from_robj","","Convert an R object to a <code>ndarray</code> ArrayView2.",95,[[["robj",4]],["result",4]]],[11,"sexptype","extendr_api::logical","",8,[[],["sexptype",6]]],[11,"to_logical","","",8,[[]]],[11,"as_typed_slice","extendr_api::robj","",41,[[],["option",4]]],[11,"as_typed_slice_mut","","",41,[[],["option",4]]],[11,"as_typed_slice","","",41,[[],["option",4]]],[11,"as_typed_slice_mut","","",41,[[],["option",4]]],[11,"as_typed_slice","","",41,[[],["option",4]]],[11,"as_typed_slice_mut","","",41,[[],["option",4]]],[11,"as_typed_slice","","",41,[[],["option",4]]],[11,"as_typed_slice_mut","","",41,[[],["option",4]]],[11,"is_na","extendr_api::logical","",8,[[]]],[11,"drop","extendr_api::robj","",41,[[]]],[11,"from","extendr_api::error","",0,[[["box",3],["error",8]],["error",4]]],[11,"from","","",0,[[],["error",4]]],[11,"from","","",0,[[["string",3]],["error",4]]],[11,"from","extendr_api::logical","",8,[[]]],[11,"from","","",8,[[]]],[11,"from","extendr_api::robj","",41,[[["rcolumn",6]]]],[11,"from","","",41,[[["rarray",3]]]],[11,"from","","",41,[[["rarray",3]]]],[11,"from","","",41,[[["arg",3]]]],[11,"from","","",41,[[["func",3]]]],[11,"from","","",41,[[["impl",3]]]],[11,"from","","",41,[[["metadata",3]]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[["result",6]]]],[11,"from","","",41,[[["character",3]]]],[11,"from","","",41,[[["robj",4]]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[["vec",3]]]],[11,"from","","",41,[[]]],[11,"from","","",41,[[["range",3]]]],[11,"from","","",41,[[["rangeinclusive",3]]]],[11,"from","","Convert a real iterator into a vector.",41,[[["real",6]]]],[11,"from","","Convert an integer iterator into a vector.",41,[[["int",6]]]],[11,"from","","Convert a logical iterator into a vector.",41,[[["logical",6]]]],[11,"from","","Convert a hashmap into a list.",41,[[["hashmap",3],["robj",4]]]],[11,"from","","Convert a vector of Robj into a list.",41,[[["robj",4],["vec",3]]]],[11,"from","","Make an robj from a function wrapper. The function …",41,[[["function",3]]]],[11,"from","","Make a list object from an iterator of Robjs.",41,[[["list",3]]]],[11,"from","","Make an expression object from an iterator of Robjs.",41,[[["expr",3]]]],[11,"from","","Make a raw object from bytes.",41,[[["raw",3]]]],[11,"from","","Make a symbol object.",41,[[["symbol",3]]]],[11,"from","","Make a primitive object, or NULL if not available.",41,[[["primitive",3]]]],[11,"from","","Convert a wrapper to an R language object.",41,[[["lang",3]]]],[11,"from","","Convert a wrapper to an R environment object.",41,[[["env",3]]]],[11,"from","","Convert a wrapper to a LISTSXP object.",41,[[["pairlist",3]]]],[11,"from","extendr_api::wrapper","",44,[[]]],[11,"from","extendr_api::robj","Convert a rust object to NULL or another type.",41,[[["nullable",4]]]],[11,"size_hint","extendr_api::iter","",3,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"nth","","",3,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",4,[[],["option",4]]],[11,"nth","","",4,[[],["option",4]]],[11,"next","","",5,[[],["option",4]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"nth","","",7,[[],["option",4]]],[11,"next","","",58,[[],["option",4]]],[11,"clone","","",3,[[],["listiter",3]]],[11,"clone","","",5,[[],["pairlistiter",3]]],[11,"clone","","",6,[[],["pairlisttagiter",3]]],[11,"clone","","",7,[[],["striter",3]]],[11,"clone","","",58,[[],["enviter",3]]],[11,"clone","extendr_api::logical","",8,[[]]],[11,"clone","extendr_api::robj","",41,[[]]],[11,"clone","extendr_api::prelude","",43,[[],["function",3]]],[11,"clone","extendr_api::wrapper","",44,[[],["symbol",3]]],[11,"clone","","",45,[[],["character",3]]],[11,"clone","","",46,[[],["raw",3]]],[11,"clone","","",47,[[],["lang",3]]],[11,"clone","","",48,[[],["pairlist",3]]],[11,"clone","","",49,[[],["list",3]]],[11,"clone","","",50,[[],["expr",3]]],[11,"clone","","",51,[[],["env",3]]],[11,"clone","","",52,[[],["promise",3]]],[11,"clone","","",53,[[],["primitive",3]]],[11,"clone","","",54,[[],["nullable",4]]],[11,"default","extendr_api::robj","",41,[[]]],[11,"eq","extendr_api::error","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","extendr_api::logical","",8,[[["bool",3]]]],[11,"ne","","",8,[[["bool",3]]]],[11,"eq","extendr_api::matrix","",9,[[["rarray",3]]]],[11,"ne","","",9,[[["rarray",3]]]],[11,"eq","extendr_api::metadata","",13,[[["arg",3]]]],[11,"ne","","",13,[[["arg",3]]]],[11,"eq","","",14,[[["func",3]]]],[11,"ne","","",14,[[["func",3]]]],[11,"eq","","",15,[[["impl",3]]]],[11,"ne","","",15,[[["impl",3]]]],[11,"eq","","",16,[[["metadata",3]]]],[11,"ne","","",16,[[["metadata",3]]]],[11,"eq","extendr_api::robj","",41,[[]]],[11,"eq","","",41,[[]]],[11,"eq","","",41,[[]]],[11,"eq","","",41,[[["robj",4]]]],[11,"eq","extendr_api::prelude","",43,[[["function",3]]]],[11,"ne","","",43,[[["function",3]]]],[11,"eq","extendr_api::wrapper","",44,[[["symbol",3]]]],[11,"ne","","",44,[[["symbol",3]]]],[11,"eq","","",45,[[["character",3]]]],[11,"ne","","",45,[[["character",3]]]],[11,"eq","","",46,[[["raw",3]]]],[11,"ne","","",46,[[["raw",3]]]],[11,"eq","","",47,[[["lang",3]]]],[11,"ne","","",47,[[["lang",3]]]],[11,"eq","","",48,[[["pairlist",3]]]],[11,"ne","","",48,[[["pairlist",3]]]],[11,"eq","","",49,[[["list",3]]]],[11,"ne","","",49,[[["list",3]]]],[11,"eq","","",50,[[["expr",3]]]],[11,"ne","","",50,[[["expr",3]]]],[11,"eq","","",51,[[["env",3]]]],[11,"ne","","",51,[[["env",3]]]],[11,"eq","","",52,[[["promise",3]]]],[11,"ne","","",52,[[["promise",3]]]],[11,"eq","","",53,[[["primitive",3]]]],[11,"ne","","",53,[[["primitive",3]]]],[11,"eq","","",54,[[["nullable",4]]]],[11,"ne","","",54,[[["nullable",4]]]],[11,"eq","extendr_api","",57,[[["rtype",4]]]],[11,"fmt","extendr_api::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::iter","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::logical","",8,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::matrix","",9,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::metadata","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::robj","",41,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::prelude","",43,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::wrapper","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api","",57,[[["formatter",3]],["result",6]]],[11,"fmt","extendr_api::error","",0,[[["formatter",3]],["result",6]]],[11,"div","extendr_api::robj","Divide two R objects, consuming the left hand side. …",41,[[]]],[11,"sub","","Subtract two R objects, consuming the left hand side. …",41,[[]]],[11,"add","","Add two R objects, consuming the left hand side. panics …",41,[[]]],[11,"mul","","Multiply two R objects, consuming the left hand side. …",41,[[]]],[11,"index","extendr_api::matrix","Zero-based indexing in row, column order.",9,[[]]],[11,"index_mut","","Zero-based mutable indexing in row, column order.",9,[[]]],[11,"source","extendr_api::error","",0,[[],[["error",8],["option",4]]]],[11,"as_pairlist_iter","extendr_api::robj","Get an iterator over a pairlist objects.",41,[[],[["option",4],["pairlistiter",3]]]],[11,"as_pairlist_tag_iter","","Get an iterator over pairlist tags.",41,[[],[["option",4],["pairlisttagiter",3]]]],[11,"as_list_iter","","Get an iterator over a list (VECSXP).",41,[[],[["listiter",3],["option",4]]]],[11,"as_str_iter","","Get an iterator over a string vector. Returns None if the …",41,[[],[["option",4],["striter",3]]]],[11,"as_env_iter","","Iterate over an environment.",41,[[],[["option",4],["enviter",3]]]],[11,"as_vector","","",41,[[],[["option",4],["rcolumn",6]]]],[11,"as_matrix","","",41,[[],[["rmatrix",6],["option",4]]]],[11,"as_matrix3d","","",41,[[],[["option",4],["rmatrix3d",6]]]],[11,"from_vec","extendr_api::prelude","Create a one-dimensional array from a vector (no copying …",59,[[["global",3],["vec",3]],[["arraybase",3],["dim",3]]]],[11,"linspace","","Create a one-dimensional array with <code>n</code> evenly spaced …",59,[[],[["arraybase",3],["dim",3]]]],[11,"range","","Create a one-dimensional array with elements from <code>start</code> …",59,[[],[["arraybase",3],["dim",3]]]],[11,"logspace","","Create a one-dimensional array with <code>n</code> logarithmically …",59,[[],[["arraybase",3],["dim",3]]]],[11,"geomspace","","Create a one-dimensional array with <code>n</code> geometrically …",59,[[],[["arraybase",3],["option",4]]]],[11,"eye","","Create an identity matrix of size <code>n</code> (square 2D array).",59,[[],[["arraybase",3],["dim",3]]]],[11,"from_diag","","Create a 2D matrix from its diagonal",59,[[["arraybase",3]],[["arraybase",3],["dim",3]]]],[11,"from_elem","","Create an array with copies of <code>elem</code>, shape <code>shape</code>.",59,[[],["arraybase",3]]],[11,"zeros","","Create an array with zeros, shape <code>shape</code>.",59,[[],["arraybase",3]]],[11,"ones","","Create an array with ones, shape <code>shape</code>.",59,[[],["arraybase",3]]],[11,"default","","Create an array with default values, shape <code>shape</code>",59,[[],["arraybase",3]]],[11,"from_shape_simple_fn","","Create an array with values created by the function <code>f</code>.",59,[[],["arraybase",3]]],[11,"from_shape_fn","","Create an array with values created by the function <code>f</code>.",59,[[],["arraybase",3]]],[11,"from_shape_vec","","Create an array with the given shape from a vector. (No …",59,[[["global",3],["vec",3]],[["shapeerror",3],["result",4],["arraybase",3]]]],[11,"from_shape_vec_unchecked","","Creates an array from a vector and interpret it according …",59,[[["global",3],["vec",3]],["arraybase",3]]],[11,"uninitialized","","Create an array with uninitalized elements, shape <code>shape</code>.",59,[[],["arraybase",3]]],[11,"maybe_uninit","","Create an array with uninitalized elements, shape <code>shape</code>.",59,[[],["arraybase",3]]],[11,"len","","Return the total number of elements in the array.",59,[[]]],[11,"len_of","","Return the length of <code>axis</code>.",59,[[["axis",3]]]],[11,"is_empty","","Return whether the array has any elements",59,[[]]],[11,"ndim","","Return the number of dimensions (axes) in the array",59,[[]]],[11,"dim","","Return the shape of the array in its “pattern” form, …",59,[[]]],[11,"raw_dim","","Return the shape of the array as it stored in the array.",59,[[]]],[11,"shape","","Return the shape of the array as a slice.",59,[[]]],[11,"strides","","Return the strides of the array as a slice.",59,[[]]],[11,"stride_of","","Return the stride of <code>axis</code>.",59,[[["axis",3]]]],[11,"view","","Return a read-only view of the array",59,[[],[["arraybase",3],["viewrepr",3]]]],[11,"view_mut","","Return a read-write view of the array",59,[[],[["arraybase",3],["viewrepr",3]]]],[11,"to_owned","","Return an uniquely owned copy of the array.",59,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"to_shared","","Return a shared ownership (copy on write) array.",59,[[],[["ownedarcrepr",3],["arraybase",3]]]],[11,"into_owned","","Turn the array into a uniquely owned array, cloning the …",59,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"into_shared","","Turn the array into a shared ownership (copy on write) …",59,[[],[["ownedarcrepr",3],["arraybase",3]]]],[11,"first","","Returns a reference to the first element of the array, or …",59,[[],["option",4]]],[11,"first_mut","","Returns a mutable reference to the first element of the …",59,[[],["option",4]]],[11,"iter","","Return an iterator of references to the elements of the …",59,[[],["iter",3]]],[11,"iter_mut","","Return an iterator of mutable references to the elements …",59,[[],["itermut",3]]],[11,"indexed_iter","","Return an iterator of indexes and references to the …",59,[[],["indexediter",3]]],[11,"indexed_iter_mut","","Return an iterator of indexes and mutable references to …",59,[[],["indexeditermut",3]]],[11,"slice","","Return a sliced view of the array.",59,[[["sliceinfo",3]],[["arraybase",3],["viewrepr",3]]]],[11,"slice_mut","","Return a sliced read-write view of the array.",59,[[["sliceinfo",3]],[["arraybase",3],["viewrepr",3]]]],[11,"multi_slice_mut","","Return multiple disjoint, sliced, mutable views of the …",59,[[]]],[11,"slice_move","","Slice the array, possibly changing the number of …",59,[[["sliceinfo",3]],["arraybase",3]]],[11,"slice_collapse","","Slice the array in place without changing the number of …",59,[[]]],[11,"slice_inplace","","Slice the array in place without changing the number of …",59,[[]]],[11,"slice_axis","","Return a view of the array, sliced along the specified …",59,[[["axis",3],["slice",3]],[["arraybase",3],["viewrepr",3]]]],[11,"slice_axis_mut","","Return a mutable view of the array, sliced along the …",59,[[["axis",3],["slice",3]],[["arraybase",3],["viewrepr",3]]]],[11,"slice_axis_inplace","","Slice the array in place along the specified axis.",59,[[["axis",3],["slice",3]]]],[11,"get","","Return a reference to the element at <code>index</code>, or return <code>None</code>…",59,[[],["option",4]]],[11,"get_mut","","Return a mutable reference to the element at <code>index</code>, or …",59,[[],["option",4]]],[11,"uget","","Perform <em>unchecked</em> array indexing.",59,[[]]],[11,"uget_mut","","Perform <em>unchecked</em> array indexing.",59,[[]]],[11,"swap","","Swap elements at indices <code>index1</code> and <code>index2</code>.",59,[[]]],[11,"uswap","","Swap elements <em>unchecked</em> at indices <code>index1</code> and <code>index2</code>.",59,[[]]],[11,"index_axis","","Returns a view restricted to <code>index</code> along the axis, with …",59,[[["axis",3]],[["arraybase",3],["viewrepr",3]]]],[11,"index_axis_mut","","Returns a mutable view restricted to <code>index</code> along the …",59,[[["axis",3]],[["viewrepr",3],["arraybase",3]]]],[11,"index_axis_move","","Collapses the array to <code>index</code> along the axis and removes …",59,[[["axis",3]],["arraybase",3]]],[11,"collapse_axis","","Selects <code>index</code> along the axis, collapsing the axis into …",59,[[["axis",3]]]],[11,"subview","","Along <code>axis</code>, select the subview <code>index</code> and return a view …",59,[[["axis",3]],[["arraybase",3],["viewrepr",3]]]],[11,"subview_mut","","Along <code>axis</code>, select the subview <code>index</code> and return a …",59,[[["axis",3]],[["viewrepr",3],["arraybase",3]]]],[11,"subview_inplace","","Collapse dimension <code>axis</code> into length one, and select the …",59,[[["axis",3]]]],[11,"into_subview","","Along <code>axis</code>, select the subview <code>index</code> and return <code>self</code> with …",59,[[["axis",3]],["arraybase",3]]],[11,"select","","Along <code>axis</code>, select arbitrary subviews corresponding to …",59,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"genrows","","Return a producer and iterable that traverses over the <em>…",59,[[],["lanes",3]]],[11,"genrows_mut","","Return a producer and iterable that traverses over the <em>…",59,[[],["lanesmut",3]]],[11,"gencolumns","","Return a producer and iterable that traverses over the <em>…",59,[[],["lanes",3]]],[11,"gencolumns_mut","","Return a producer and iterable that traverses over the <em>…",59,[[],["lanesmut",3]]],[11,"lanes","","Return a producer and iterable that traverses over all 1D …",59,[[["axis",3]],["lanes",3]]],[11,"lanes_mut","","Return a producer and iterable that traverses over all 1D …",59,[[["axis",3]],["lanesmut",3]]],[11,"outer_iter","","Return an iterator that traverses over the outermost …",59,[[],["axisiter",3]]],[11,"outer_iter_mut","","Return an iterator that traverses over the outermost …",59,[[],["axisitermut",3]]],[11,"axis_iter","","Return an iterator that traverses over <code>axis</code> and yields …",59,[[["axis",3]],["axisiter",3]]],[11,"axis_iter_mut","","Return an iterator that traverses over <code>axis</code> and yields …",59,[[["axis",3]],["axisitermut",3]]],[11,"axis_chunks_iter","","Return an iterator that traverses over <code>axis</code> by chunks of …",59,[[["axis",3]],["axischunksiter",3]]],[11,"axis_chunks_iter_mut","","Return an iterator that traverses over <code>axis</code> by chunks of …",59,[[["axis",3]],["axischunksitermut",3]]],[11,"exact_chunks","","Return an exact chunks producer (and iterable).",59,[[],["exactchunks",3]]],[11,"exact_chunks_mut","","Return an exact chunks producer (and iterable).",59,[[],["exactchunksmut",3]]],[11,"windows","","Return a window producer and iterable.",59,[[],["windows",3]]],[11,"diag","","Return an view of the diagonal elements of the array.",59,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[11,"diag_mut","","Return a read-write view over the diagonal elements of …",59,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[11,"into_diag","","Return the diagonal as a one-dimensional array.",59,[[],[["arraybase",3],["dim",3]]]],[11,"is_standard_layout","","Return <code>true</code> if the array data is laid out in contiguous …",59,[[]]],[11,"as_standard_layout","","Return a standard-layout array containing the data, …",59,[[],[["arraybase",3],["cowrepr",4]]]],[11,"as_ptr","","Return a pointer to the first element in the array.",59,[[]]],[11,"as_mut_ptr","","Return a mutable pointer to the first element in the …",59,[[]]],[11,"raw_view","","Return a raw view of the array.",59,[[],[["rawviewrepr",3],["arraybase",3]]]],[11,"raw_view_mut","","Return a raw mutable view of the array.",59,[[],[["arraybase",3],["rawviewrepr",3]]]],[11,"as_slice","","Return the array’s data as a slice, if it is contiguous …",59,[[],["option",4]]],[11,"as_slice_mut","","Return the array’s data as a slice, if it is contiguous …",59,[[],["option",4]]],[11,"as_slice_memory_order","","Return the array’s data as a slice if it is contiguous, …",59,[[],["option",4]]],[11,"as_slice_memory_order_mut","","Return the array’s data as a slice if it is contiguous, …",59,[[],["option",4]]],[11,"into_shape","","Transform the array into <code>shape</code>; any shape with the same …",59,[[],[["result",4],["arraybase",3],["shapeerror",3]]]],[11,"reshape","","<em>Note: Reshape is for <code>ArcArray</code> only. Use <code>.into_shape()</code> for …",59,[[],["arraybase",3]]],[11,"into_dyn","","Convert any array or array view to a dynamic dimensional …",59,[[],[["dim",3],["arraybase",3]]]],[11,"into_dimensionality","","Convert an array or array view to another with the same …",59,[[],[["arraybase",3],["result",4],["shapeerror",3]]]],[11,"broadcast","","Act like a larger size and/or shape array by <em>broadcasting</em> …",59,[[],[["arraybase",3],["option",4]]]],[11,"swap_axes","","Swap axes <code>ax</code> and <code>bx</code>.",59,[[]]],[11,"permuted_axes","","Permute the axes.",59,[[],["arraybase",3]]],[11,"reversed_axes","","Transpose the array by reversing axes.",59,[[],["arraybase",3]]],[11,"t","","Return a transposed view of the array.",59,[[],[["arraybase",3],["viewrepr",3]]]],[11,"axes","","Return an iterator over the length and stride of each …",59,[[],["axes",3]]],[11,"max_stride_axis","","Return the axis with the greatest stride (by absolute …",59,[[],["axis",3]]],[11,"invert_axis","","Reverse the stride of <code>axis</code>.",59,[[["axis",3]]]],[11,"merge_axes","","If possible, merge in the axis <code>take</code> to <code>into</code>.",59,[[["axis",3]]]],[11,"insert_axis","","Insert new array axis at <code>axis</code> and return the result.",59,[[["axis",3]],["arraybase",3]]],[11,"remove_axis","","Remove array axis <code>axis</code> and return the result.",59,[[["axis",3]],["arraybase",3]]],[11,"assign","","Perform an elementwise assigment to <code>self</code> from <code>rhs</code>.",59,[[["arraybase",3]]]],[11,"fill","","Perform an elementwise assigment to <code>self</code> from element <code>x</code>.",59,[[]]],[11,"zip_mut_with","","Traverse two arrays in unspecified order, in lock step, …",59,[[["arraybase",3]]]],[11,"fold","","Traverse the array elements and apply a fold, returning …",59,[[]]],[11,"map","","Call <code>f</code> by reference on each element and create a new array…",59,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"map_mut","","Call <code>f</code> on a mutable reference of each element and create …",59,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"mapv","","Call <code>f</code> by <strong>v</strong>alue on each element and create a new array …",59,[[],[["ownedrepr",3],["arraybase",3]]]],[11,"mapv_into","","Call <code>f</code> by <strong>v</strong>alue on each element, update the array with …",59,[[],["arraybase",3]]],[11,"map_inplace","","Modify the array in place by calling <code>f</code> by mutable …",59,[[]]],[11,"mapv_inplace","","Modify the array in place by calling <code>f</code> by <strong>v</strong>alue on each …",59,[[]]],[11,"visit","","Visit each element in the array by calling <code>f</code> by reference …",59,[[]]],[11,"fold_axis","","Fold along an axis.",59,[[["axis",3]],[["ownedrepr",3],["arraybase",3]]]],[11,"map_axis","","Reduce the values along an axis into just one value, …",59,[[["axis",3]],[["ownedrepr",3],["arraybase",3]]]],[11,"map_axis_mut","","Reduce the values along an axis into just one value, …",59,[[["axis",3]],[["ownedrepr",3],["arraybase",3]]]],[11,"accumulate_axis_inplace","","Iterates over pairs of consecutive elements along the …",59,[[["axis",3]]]],[11,"into_scalar","","Returns the single element in the array without cloning …",59,[[]]],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way …",59,[[],[["global",3],["vec",3]]]],[11,"assume_init","","<strong>Promise</strong> that the array\'s elements are all fully …",59,[[],["arraybase",3]]],[11,"to_vec","","Return an vector with the elements of the one-dimensional …",59,[[],[["global",3],["vec",3]]]],[11,"row","","Return an array view of row <code>index</code>.",59,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[11,"row_mut","","Return a mutable array view of row <code>index</code>.",59,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[11,"nrows","","Return the number of rows (length of <code>Axis(0)</code>) in the …",59,[[]]],[11,"rows","","Return the number of rows (length of <code>Axis(0)</code>) in the …",59,[[]]],[11,"column","","Return an array view of column <code>index</code>.",59,[[],[["arraybase",3],["dim",3],["viewrepr",3]]]],[11,"column_mut","","Return a mutable array view of column <code>index</code>.",59,[[],[["viewrepr",3],["arraybase",3],["dim",3]]]],[11,"ncols","","Return the number of columns (length of <code>Axis(1)</code>) in the …",59,[[]]],[11,"cols","","Return the number of columns (length of <code>Axis(1)</code>) in the …",59,[[]]],[11,"is_square","","Return true if the array is square, false otherwise.",59,[[]]],[11,"insert_axis_inplace","","Insert new array axis of length 1 at <code>axis</code>, modifying the …",59,[[["axis",3]]]],[11,"index_axis_inplace","","Collapses the array to <code>index</code> along the axis and removes …",59,[[["axis",3]]]],[11,"sum","","Return the sum of all elements in the array.",59,[[]]],[11,"mean","","Returns the arithmetic mean x̅ of all elements in the …",59,[[],["option",4]]],[11,"scalar_sum","","Return the sum of all elements in the array.",59,[[]]],[11,"product","","Return the product of all elements in the array.",59,[[]]],[11,"sum_axis","","Return sum along <code>axis</code>.",59,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"mean_axis","","Return mean along <code>axis</code>.",59,[[["axis",3]],[["arraybase",3],["option",4]]]],[11,"var_axis","","Return variance along <code>axis</code>.",59,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"std_axis","","Return standard deviation along <code>axis</code>.",59,[[["axis",3]],[["arraybase",3],["ownedrepr",3]]]],[11,"all_close","","Return <code>true</code> if the arrays\' elementwise differences are …",59,[[["arraybase",3]]]],[11,"dot","","Perform dot product or matrix multiplication of arrays …",59,[[]]],[11,"dot","","Perform matrix multiplication of rectangular arrays <code>self</code> …",59,[[]]],[11,"scaled_add","","Perform the operation <code>self += alpha * rhs</code> efficiently, …",59,[[["arraybase",3]]]],[11,"from_shape","","Create a read-only array view borrowing its data from a …",59,[[],[["result",4],["arraybase",3],["shapeerror",3]]]],[11,"from_shape_ptr","","Create an <code>ArrayView<A, D></code> from shape information and a …",59,[[],[["arraybase",3],["viewrepr",3]]]],[11,"from_shape","","Create a read-write array view borrowing its data from a …",59,[[],[["result",4],["arraybase",3],["shapeerror",3]]]],[11,"from_shape_ptr","","Create an <code>ArrayViewMut<A, D></code> from shape information and a …",59,[[],[["arraybase",3],["viewrepr",3]]]],[11,"reborrow","","Convert the view into an <code>ArrayViewMut<\'b, A, D></code> where <code>\'b</code> …",59,[[],[["viewrepr",3],["arraybase",3]]]],[11,"reborrow","","Convert the view into an <code>ArrayView<\'b, A, D></code> where <code>\'b</code> is …",59,[[],[["viewrepr",3],["arraybase",3]]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous …",59,[[],["option",4]]],[11,"to_slice","","Return the array’s data as a slice, if it is contiguous …",59,[[],["option",4]]],[11,"into_scalar","","Consume the view and return a reference to the single …",59,[[]]],[11,"into_scalar","","Consume the mutable view and return a mutable reference …",59,[[]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous …",59,[[],["option",4]]],[11,"split_at","","Split the array view along <code>axis</code> and return one view …",59,[[["axis",3]]]],[11,"split_at","","Split the array view along <code>axis</code> and return one mutable …",59,[[["axis",3]]]],[11,"multi_slice_move","","Split the view into multiple disjoint slices.",59,[[]]],[11,"from_shape_ptr","","Create an <code>RawArrayView<A, D></code> from shape information and a …",59,[[],[["rawviewrepr",3],["arraybase",3]]]],[11,"deref_into_view","","Converts to a read-only view of the array.",59,[[],[["arraybase",3],["viewrepr",3]]]],[11,"split_at","","Split the array view along <code>axis</code> and return one array …",59,[[["axis",3]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different …",59,[[],[["arraybase",3],["rawviewrepr",3]]]],[11,"from_shape_ptr","","Create an <code>RawArrayViewMut<A, D></code> from shape information …",59,[[],[["arraybase",3],["rawviewrepr",3]]]],[11,"deref_into_view","","Converts to a read-only view of the array.",59,[[],[["arraybase",3],["viewrepr",3]]]],[11,"deref_into_view_mut","","Converts to a mutable view of the array.",59,[[],[["arraybase",3],["viewrepr",3]]]],[11,"split_at","","Split the array view along <code>axis</code> and return one array …",59,[[["axis",3]]]],[11,"cast","","Cast the raw pointer of the raw array view to a different …",59,[[],[["rawviewrepr",3],["arraybase",3]]]],[11,"is_view","","Returns <code>true</code> iff the array is the view (borrowed) variant.",59,[[]]],[11,"is_owned","","Returns <code>true</code> iff the array is the owned variant.",59,[[]]],[11,"index","","Return the index of the axis.",17,[[]]],[11,"zeros","","Create a new dimension value with <code>n</code> axes, all zeros",60,[[],[["dim",3],["ixdynimpl",3]]]],[11,"is_view","","Returns <code>true</code> iff the data is the <code>View</code> variant.",20,[[]]],[11,"is_owned","","Returns <code>true</code> iff the data is the <code>Owned</code> variant.",20,[[]]],[11,"size","","Return the size of the shape in number of elements",64,[[]]],[11,"axis","","Return axis",22,[[],["axis",3]]],[11,"len","","Return length",22,[[]]],[11,"stride","","Return stride",22,[[]]],[11,"kind","","Return the <code>ErrorKind</code> of this error.",67,[[],["errorkind",4]]],[11,"from_kind","","Create a new <code>ShapeError</code>",67,[[["errorkind",4]],["shapeerror",3]]],[11,"new","","Create a new <code>Slice</code> with the given extents.",26,[[["option",4]],["slice",3]]],[11,"step_by","","Create a new <code>Slice</code> with the given step size (multiplied …",26,[[],["slice",3]]],[11,"new","","Returns a new <code>SliceInfo</code> instance.",68,[[],[["result",4],["shapeerror",3],["sliceinfo",3]]]],[11,"out_ndim","","Returns the number of dimensions after calling <code>.slice()</code> …",68,[[]]],[11,"is_slice","","Returns <code>true</code> if <code>self</code> is a <code>Slice</code> value.",27,[[]]],[11,"is_index","","Returns <code>true</code> if <code>self</code> is an <code>Index</code> value.",27,[[]]],[11,"step_by","","Returns a new <code>SliceOrIndex</code> with the given step size …",27,[[],["sliceorindex",4]]],[11,"split_at","extendr_api::prelude::iter","Splits the iterator at index, yielding two disjoint …",72,[[]]],[11,"split_at","","Splits the iterator at index, yielding two disjoint …",73,[[]]],[11,"split_at","","Splits the iterator at <code>index</code>, yielding two disjoint …",74,[[]]],[11,"split_at","","Splits the iterator at <code>index</code>, yielding two disjoint …",75,[[]]],[11,"into_inner","extendr_api::prelude","Return the inner value",33,[[]]],[11,"is_done","","Return true if it is <code>Done</code>, false if <code>Continue</code>",33,[[]]],[11,"from","","Create a new <code>Zip</code> from the input array or other producer <code>p</code>.",89,[[],["zip",3]]],[11,"indexed","","Create a new <code>Zip</code> with an index producer and the producer <code>p</code>…",89,[[],["zip",3]]],[11,"size","","Return a the number of element tuples in the Zip",89,[[]]],[11,"apply","","Apply a function to all elements of the input arrays, …",89,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",89,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",89,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a …",89,[[]]],[11,"and","","Include the producer <code>p</code> in the Zip.",89,[[],["zip",3]]],[11,"and_broadcast","","Include the producer <code>p</code> in the Zip, broadcasting if needed.",89,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has …",89,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer <code>into</code>, …",89,[[]]],[11,"split","","Split the <code>Zip</code> evenly in two.",89,[[]]],[11,"apply","","Apply a function to all elements of the input arrays, …",89,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",89,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",89,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a …",89,[[]]],[11,"and","","Include the producer <code>p</code> in the Zip.",89,[[],["zip",3]]],[11,"and_broadcast","","Include the producer <code>p</code> in the Zip, broadcasting if needed.",89,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has …",89,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer <code>into</code>, …",89,[[]]],[11,"split","","Split the <code>Zip</code> evenly in two.",89,[[]]],[11,"apply","","Apply a function to all elements of the input arrays, …",89,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",89,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",89,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a …",89,[[]]],[11,"and","","Include the producer <code>p</code> in the Zip.",89,[[],["zip",3]]],[11,"and_broadcast","","Include the producer <code>p</code> in the Zip, broadcasting if needed.",89,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has …",89,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer <code>into</code>, …",89,[[]]],[11,"split","","Split the <code>Zip</code> evenly in two.",89,[[]]],[11,"apply","","Apply a function to all elements of the input arrays, …",89,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",89,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",89,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a …",89,[[]]],[11,"and","","Include the producer <code>p</code> in the Zip.",89,[[],["zip",3]]],[11,"and_broadcast","","Include the producer <code>p</code> in the Zip, broadcasting if needed.",89,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has …",89,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer <code>into</code>, …",89,[[]]],[11,"split","","Split the <code>Zip</code> evenly in two.",89,[[]]],[11,"apply","","Apply a function to all elements of the input arrays, …",89,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",89,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",89,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a …",89,[[]]],[11,"and","","Include the producer <code>p</code> in the Zip.",89,[[],["zip",3]]],[11,"and_broadcast","","Include the producer <code>p</code> in the Zip, broadcasting if needed.",89,[[],["zip",3]]],[11,"apply_collect","","Apply and collect the results into a new array, which has …",89,[[],[["arraybase",3],["ownedrepr",3]]]],[11,"apply_assign_into","","Apply and assign the results into the producer <code>into</code>, …",89,[[]]],[11,"split","","Split the <code>Zip</code> evenly in two.",89,[[]]],[11,"apply","","Apply a function to all elements of the input arrays, …",89,[[]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",89,[[]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",89,[[],["foldwhile",4]]],[11,"all","","Tests if every element of the iterator matches a …",89,[[]]],[11,"split","","Split the <code>Zip</code> evenly in two.",89,[[]]],[11,"sexptype","extendr_api::robj","",40,[[],["sexptype",6]]],[11,"to_real","","",40,[[]]],[11,"to_integer","","",40,[[]]],[11,"to_logical","","",40,[[]]],[11,"to_raw","","",40,[[]]],[11,"to_sexp","","",40,[[],["sexp",6]]],[11,"dollar","","Do the equivalent of x$y",41,[[],[["result",6],["robj",4]]]],[11,"slice","","Do the equivalent of <code>x[y]</code>",41,[[],[["result",6],["robj",4]]]],[11,"index","","Do the equivalent of <code>x[[y]]</code>",41,[[],[["result",6],["robj",4]]]],[11,"tilde","","Do the equivalent of x ~ y",41,[[],[["result",6],["robj",4]]]],[11,"double_colon","","Do the equivalent of x :: y",41,[[],[["result",6],["robj",4]]]],[11,"call","","Do the equivalent of x(a, b, c)",41,[[["robj",4]],[["result",6],["robj",4]]]],[11,"is_null","","Return true if this is the null object.",41,[[]]],[11,"is_symbol","","Return true if this is a symbol.",41,[[]]],[11,"is_logical","","Return true if this is a boolean (logical) vector",41,[[]]],[11,"is_real","","Return true if this is a real (f64) vector.",41,[[]]],[11,"is_complex","","Return true if this is a complex vector.",41,[[]]],[11,"is_expr","","Return true if this is an expression.",41,[[]]],[11,"is_environment","","Return true if this is an environment.",41,[[]]],[11,"is_promise","","Return true if this is an environment.",41,[[]]],[11,"is_string","","Return true if this is a string.",41,[[]]],[11,"is_object","","Return true if this is an object.",41,[[]]],[11,"get_current_srcref","","Get the source ref.",41,[[],["robj",4]]],[11,"get_src_filename","","Get the source filename.",41,[[],["robj",4]]],[11,"as_char","","Convert to a string vector.",41,[[],["robj",4]]],[11,"coerce_vector","","Convert to vectors of many kinds.",41,[[],["robj",4]]],[11,"pair_to_vector_list","","Convert a pairlist (LISTSXP) to a vector list (VECSXP).",41,[[],["robj",4]]],[11,"vector_to_pair_list","","Convert a vector list (VECSXP) to a pair list (LISTSXP)",41,[[],["robj",4]]],[11,"as_character_factor","","Convert a factor to a string vector.",41,[[],["robj",4]]],[11,"alloc_matrix","","Allocate a matrix object.",41,[[["sexptype",6]],["robj",4]]],[11,"duplicate","","Compatible way to duplicate an object. Use obj.clone() …",41,[[]]],[11,"find_function","","Find a function in an environment ignoring other …",41,[[["into",8],["robj",4]],[["robj",4],["option",4]]]],[11,"find_var","","Find a variable in an environment.",41,[[["into",8],["robj",4]],[["robj",4],["option",4]]]],[11,"eval_promise","","If this object is a promise, evaluate it, otherwise …",41,[[],[["result",6],["robj",4]]]],[11,"ncols","","Number of columns of a matrix",41,[[]]],[11,"nrows","","Number of rows of a matrix",41,[[]]],[11,"xlengthgets","","Copy a vector and resize it. See. …",41,[[],[["result",6],["robj",4]]]],[11,"alloc_vector","","Allocated an owned object of a certain type.",41,[[],["robj",4]]],[11,"conformable","","Return true if two arrays have identical dims.",41,[[["robj",4]]]],[11,"is_array","","Return true if this is an array.",41,[[]]],[11,"is_factor","","Return true if this is factor.",41,[[]]],[11,"is_frame","","Return true if this is a data frame.",41,[[]]],[11,"is_function","","Return true if this is a function.",41,[[]]],[11,"is_integer","","Return true if this is an integer vector (INTSXP) but not …",41,[[]]],[11,"is_language","","Return true if this is a language object (LANGSXP).",41,[[]]],[11,"is_pairlist","","Return true if this is NILSXP or LISTSXP.",41,[[]]],[11,"is_matrix","","Return true if this is a matrix.",41,[[]]],[11,"is_list","","Return true if this is NILSXP or VECSXP.",41,[[]]],[11,"is_number","","Return true if this is INTSXP, LGLSXP or REALSXP but not …",41,[[]]],[11,"is_primitive","","Return true if this is a primitive function BUILTINSXP, …",41,[[]]],[11,"is_ts","","Return true if this is a time series vector (see tsp).",41,[[]]],[11,"is_user_binop","","Return true if this is a user defined binop.",41,[[]]],[11,"is_valid_string","","Return true if this is a valid string.",41,[[]]],[11,"is_valid_string_f","","Return true if this is a valid string.",41,[[]]],[11,"is_vector","","Return true if this is a vector.",41,[[]]],[11,"is_vector_atomic","","Return true if this is an atomic vector.",41,[[]]],[11,"is_vector_list","","Return true if this is a vector list.",41,[[]]],[11,"is_vectorizable","","Return true if this is can be made into a vector.",41,[[]]],[11,"is_missing_arg","","",41,[[]]],[11,"is_unbound_value","","",41,[[]]],[11,"is_package_env","","",41,[[]]],[11,"package_env_name","","",41,[[],["robj",4]]],[11,"is_namespace_env","","",41,[[]]],[11,"namespace_env_spec","","",41,[[],["robj",4]]]],"p":[[4,"Error"],[13,"EvalError"],[13,"ParseError"],[3,"ListIter"],[3,"SliceIter"],[3,"PairlistIter"],[3,"PairlistTagIter"],[3,"StrIter"],[3,"Bool"],[3,"RArray"],[6,"RColumn"],[6,"RMatrix"],[6,"RMatrix3D"],[3,"Arg"],[3,"Func"],[3,"Impl"],[3,"Metadata"],[3,"Axis"],[8,"Dimension"],[8,"ShapeBuilder"],[4,"CowRepr"],[8,"Dot"],[3,"AxisDescription"],[8,"IntoDimension"],[8,"RemoveAxis"],[4,"ErrorKind"],[3,"Slice"],[4,"SliceOrIndex"],[13,"Slice"],[8,"IndexLonger"],[8,"AssignElem"],[8,"RawData"],[8,"RawDataSubst"],[4,"FoldWhile"],[8,"IntoNdProducer"],[8,"NdProducer"],[8,"FixedInitializer"],[8,"FromRobj"],[8,"IntoRobj"],[8,"RobjItertools"],[8,"ToVectorValue"],[4,"Robj"],[8,"AsTypedSlice"],[3,"Function"],[3,"Symbol"],[3,"Character"],[3,"Raw"],[3,"Lang"],[3,"Pairlist"],[3,"List"],[3,"Expr"],[3,"Env"],[3,"Promise"],[3,"Primitive"],[4,"Nullable"],[8,"SymPair"],[8,"IsNA"],[4,"RType"],[3,"EnvIter"],[3,"ArrayBase"],[3,"Dim"],[3,"OwnedRcRepr"],[3,"RawViewRepr"],[3,"ViewRepr"],[3,"Shape"],[3,"StrideShape"],[3,"IxDynImpl"],[3,"ShapeError"],[3,"SliceInfo"],[3,"Axes"],[3,"Indices"],[3,"IndicesIter"],[3,"AxisChunksIter"],[3,"AxisChunksIterMut"],[3,"AxisIter"],[3,"AxisIterMut"],[3,"ExactChunks"],[3,"ExactChunksIter"],[3,"ExactChunksIterMut"],[3,"ExactChunksMut"],[3,"IndexedIter"],[3,"IndexedIterMut"],[3,"Iter"],[3,"IterMut"],[3,"Lanes"],[3,"LanesIter"],[3,"LanesIterMut"],[3,"LanesMut"],[3,"Windows"],[3,"Zip"],[3,"OwnedRepr"],[6,"Int"],[6,"Real"],[6,"Logical"],[6,"ArrayView1"],[6,"ArrayView2"]]},\
"extendr_engine":{"doc":"A sigleton instance of the R interpreter.","i":[[5,"start_r","extendr_engine","",null,[[]]],[5,"end_r","","Close down the R interpreter. Note you won\'t be able to …",null,[[]]]],"p":[]},\
"extendr_macros":{"doc":"Macros for generating wrappers for rust functions.","i":[[23,"extendr","extendr_macros","Generate bindings for a single function.",null,null],[14,"extendr_module","","Define a module and export symbols to R Example:",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);