(function() {var implementors = {};
implementors["extendr_api"] = [{"text":"impl PartialEq&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Bool&gt; for Bool","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Arg&gt; for Arg","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Func&gt; for Func","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Impl&gt; for Impl","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Metadata&gt; for Metadata","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialEq&lt;[i32]&gt; for Robj","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialEq&lt;[f64]&gt; for Robj","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;str&gt; for Robj","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Robj&gt; for Robj","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Character&gt; for Character","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Environment&gt; for Environment","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Expression&gt; for Expression","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Function&gt; for Function","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Language&gt; for Language","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;List&gt; for List","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;PartialEq, D:&nbsp;PartialEq&gt; PartialEq&lt;RArray&lt;T, D&gt;&gt; for RArray&lt;T, D&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;PartialEq&gt; PartialEq&lt;Nullable&lt;T&gt;&gt; for Nullable&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Pairlist&gt; for Pairlist","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Primitive&gt; for Primitive","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Promise&gt; for Promise","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Raw&gt; for Raw","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Symbol&gt; for Symbol","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;RType&gt; for RType","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()