(function() {var implementors = {};
implementors["extendr_api"] = [{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SliceIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StrIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Bool","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Arg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Func","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Robj","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Character","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Environment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnvIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expression","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Language","synthetic":true,"types":[]},{"text":"impl UnwindSafe for List","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ListIter","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for FromList&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, D&gt; UnwindSafe for RArray&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Nullable&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pairlist","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PairlistIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Primitive","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Promise","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Raw","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RType","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()